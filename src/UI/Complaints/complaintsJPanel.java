/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Complaints;

import business.EcoSystem;
import business.student.accomodation.Permanent;
import business.student.accomodation.PermanentDirectory;
import business.student.accomodation.Temporary;
import business.student.accomodation.TemporaryDirectory;
import business.useraccount.UserAccount;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prashantii_s
 */
public class complaintsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form complaintsJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAccount;
    TemporaryDirectory temporaryDirectory;
    PermanentDirectory permanentDirectory;
    Temporary temp;
    Permanent per;
    public complaintsJPanel() {
        
    }
    public complaintsJPanel(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecosystem){
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.ecosystem=ecosystem;
        this.userAccount = userAccount;
        this.temporaryDirectory=ecosystem.getTemporaryDirectory();
        this.permanentDirectory=ecosystem.getPermanentDirectory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ComplaintManagerTab = new javax.swing.JTabbedPane();
        sellingComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buyingComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        tempAccomodationsComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TempComplaintsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tempSendToAdmin = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        permAccomodationsComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PermanentComplaintsTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        PermSendToAdminbtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jLabel1.setText("Complaint Manager");

        ComplaintManagerTab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ComplaintManagerTabStateChanged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout sellingComplaintsJPanelLayout = new javax.swing.GroupLayout(sellingComplaintsJPanel);
        sellingComplaintsJPanel.setLayout(sellingComplaintsJPanelLayout);
        sellingComplaintsJPanelLayout.setHorizontalGroup(
            sellingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellingComplaintsJPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        sellingComplaintsJPanelLayout.setVerticalGroup(
            sellingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellingComplaintsJPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(201, Short.MAX_VALUE))
        );

        ComplaintManagerTab.addTab("Selling ", sellingComplaintsJPanel);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        javax.swing.GroupLayout buyingComplaintsJPanelLayout = new javax.swing.GroupLayout(buyingComplaintsJPanel);
        buyingComplaintsJPanel.setLayout(buyingComplaintsJPanelLayout);
        buyingComplaintsJPanelLayout.setHorizontalGroup(
            buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        buyingComplaintsJPanelLayout.setVerticalGroup(
            buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
        );

        ComplaintManagerTab.addTab("Buying ", buyingComplaintsJPanel);

        TempComplaintsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Complaint Against", "Comment", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TempComplaintsTable);

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        jLabel5.setText("jLabel5");

        jLabel6.setText("jLabel6");

        jLabel7.setText("jLabel7");

        tempSendToAdmin.setText("Send to Admin for Deletion");
        tempSendToAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempSendToAdminActionPerformed(evt);
            }
        });

        jButton2.setText("Mark as OK");

        javax.swing.GroupLayout tempAccomodationsComplaintsJPanelLayout = new javax.swing.GroupLayout(tempAccomodationsComplaintsJPanel);
        tempAccomodationsComplaintsJPanel.setLayout(tempAccomodationsComplaintsJPanelLayout);
        tempAccomodationsComplaintsJPanelLayout.setHorizontalGroup(
            tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(312, 312, 312)
                        .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jButton2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(tempSendToAdmin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tempAccomodationsComplaintsJPanelLayout.setVerticalGroup(
            tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(29, 29, 29)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addGap(27, 27, 27)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempSendToAdmin)
                    .addComponent(jButton2))
                .addGap(21, 21, 21))
        );

        ComplaintManagerTab.addTab("Temporary Accomodation ", tempAccomodationsComplaintsJPanel);

        PermanentComplaintsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Complaint against", "Comments", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(PermanentComplaintsTable);

        jLabel8.setText("jLabel8");

        jLabel9.setText("jLabel9");

        jLabel10.setText("jLabel10");

        jLabel11.setText("jLabel11");

        PermSendToAdminbtn.setText("Send to Admin for Deletion");
        PermSendToAdminbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PermSendToAdminbtnActionPerformed(evt);
            }
        });

        jButton4.setText("Mark as OK");

        javax.swing.GroupLayout permAccomodationsComplaintsJPanelLayout = new javax.swing.GroupLayout(permAccomodationsComplaintsJPanel);
        permAccomodationsComplaintsJPanel.setLayout(permAccomodationsComplaintsJPanelLayout);
        permAccomodationsComplaintsJPanelLayout.setHorizontalGroup(
            permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(241, 241, 241))
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(233, 233, 233))))
            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(PermSendToAdminbtn)
                .addGap(103, 103, 103)
                .addComponent(jButton4)
                .addGap(0, 199, Short.MAX_VALUE))
        );
        permAccomodationsComplaintsJPanelLayout.setVerticalGroup(
            permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(35, 35, 35)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PermSendToAdminbtn)
                    .addComponent(jButton4))
                .addGap(26, 26, 26))
        );

        ComplaintManagerTab.addTab("Permanent Accomodtion ", permAccomodationsComplaintsJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ComplaintManagerTab, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ComplaintManagerTab, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateTemporaryAccomodtionComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) TempComplaintsTable.getModel();
        model.setRowCount(0);
        String contact="";
         Object[] row = new Object[3];
         Map<String, ArrayList<Temporary>> latestDirectory = temporaryDirectory.getTemporaryDirectory();
        for(String key: latestDirectory.keySet()){
         for(Temporary value : latestDirectory.get(key)) {
             if(value.getStatusOfPost().equals("reported")){
                    contact=key;
                    row[0] = value.getHostName();
                    row[1] = value.getComment();
                    row[2] = value.getStatusOfPost();
                    model.addRow(row);
             }
         }
        }
    }
     private void populatePermanentAccomodtionComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) PermanentComplaintsTable.getModel();
        model.setRowCount(0);
        String contact="";
         Object[] row = new Object[3];
         Map<String, ArrayList<Permanent>> latestDirectory = permanentDirectory.getPermanentDirectory();
        for(String key: latestDirectory.keySet()){
         for(Permanent value : latestDirectory.get(key)) {
             if(value.getStatusOfPost().equals("reported")){
                    contact=key;
                    row[0] = value.getHostName();
                    row[1] = value.getStatusOfPost();
                    row[2] = value.getStatusOfPost();
                    model.addRow(row);
            }
         }
        }
    }
    private void ComplaintManagerTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ComplaintManagerTabStateChanged
        if(ComplaintManagerTab.getSelectedIndex()==2){
         populateTemporaryAccomodtionComplaintsTable();
         initTempListerners();
        }
        if(ComplaintManagerTab.getSelectedIndex()==3){
         populatePermanentAccomodtionComplaintsTable();
         initPermListerners();
        }
    }//GEN-LAST:event_ComplaintManagerTabStateChanged

    private void PermSendToAdminbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PermSendToAdminbtnActionPerformed
      int selectedRow = PermanentComplaintsTable.getSelectedRow();
         if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a post to send");
            return;
        }else{
              per = (Permanent) PermanentComplaintsTable.getValueAt(selectedRow, 0);
              per.setStatusOfPost("Delete");
              JOptionPane.showMessageDialog(null, "Admin will delete the post!");
              populateTemporaryAccomodtionComplaintsTable();
             }
    }//GEN-LAST:event_PermSendToAdminbtnActionPerformed

    private void tempSendToAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempSendToAdminActionPerformed
       int selectedRow = TempComplaintsTable.getSelectedRow();
         if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a post to send");
            return;
        }else{
              temp = (Temporary) TempComplaintsTable.getValueAt(selectedRow, 0);
              temp.setStatusOfPost("To be Deleted");
              JOptionPane.showMessageDialog(null, "Admin will delete the post!");
              populateTemporaryAccomodtionComplaintsTable();
             }
    }//GEN-LAST:event_tempSendToAdminActionPerformed
   private void initTempListerners() {
        TempComplaintsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = TempComplaintsTable.getSelectedRow();
                if (selectedRow >= 0) {
                    Temporary temp = (Temporary) TempComplaintsTable.getValueAt(selectedRow, 0);                      
                          
                 
                }
            }
        });
    }
 private void initPermListerners() {
        PermanentComplaintsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = PermanentComplaintsTable.getSelectedRow();
                if (selectedRow >= 0) {
                    Temporary temp = (Temporary) PermanentComplaintsTable.getValueAt(selectedRow, 0);                      
                            
                 
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane ComplaintManagerTab;
    private javax.swing.JButton PermSendToAdminbtn;
    private javax.swing.JTable PermanentComplaintsTable;
    private javax.swing.JTable TempComplaintsTable;
    private javax.swing.JPanel buyingComplaintsJPanel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel permAccomodationsComplaintsJPanel;
    private javax.swing.JPanel sellingComplaintsJPanel;
    private javax.swing.JPanel tempAccomodationsComplaintsJPanel;
    private javax.swing.JButton tempSendToAdmin;
    // End of variables declaration//GEN-END:variables
}
