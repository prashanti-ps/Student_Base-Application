/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Complaints;

import business.EcoSystem;
import business.student.accomodation.Permanent;
import business.student.accomodation.PermanentDirectory;
import business.student.accomodation.Temporary;
import business.student.accomodation.TemporaryDirectory;
import business.useraccount.UserAccount;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prashantii_s
 */
public class complaintsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form complaintsJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAccount;
    TemporaryDirectory temporaryDirectory;
    PermanentDirectory permanentDirectory;
    Temporary temp;
    Permanent per;

    public complaintsJPanel() {

    }

    public complaintsJPanel(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAccount = userAccount;
        this.temporaryDirectory = ecosystem.getTemporaryDirectory();
        this.permanentDirectory = ecosystem.getPermanentDirectory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ComplaintManagerTab = new javax.swing.JTabbedPane();
        sellingComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buyingComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        tempAccomodationsComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TempComplaintsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tempSendToAdmin = new javax.swing.JButton();
        btnTempOK = new javax.swing.JButton();
        lblTempAddress = new javax.swing.JLabel();
        lblTempFacilities = new javax.swing.JLabel();
        lblTempPrice = new javax.swing.JLabel();
        lblTempContact = new javax.swing.JLabel();
        lblTempDistance = new javax.swing.JLabel();
        lblTempOccupancy = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtTempComment = new javax.swing.JTextField();
        permAccomodationsComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PermanentComplaintsTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        PermSendToAdminbtn = new javax.swing.JButton();
        btnPermOk = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtPermComment = new javax.swing.JTextField();
        lblPermAddress = new javax.swing.JLabel();
        lblPermFacilities = new javax.swing.JLabel();
        lblPermRent = new javax.swing.JLabel();
        lblPermContact = new javax.swing.JLabel();
        lblPermTotalPpl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(29, 34, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Complaint Manager");

        ComplaintManagerTab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ComplaintManagerTabStateChanged(evt);
            }
        });

        sellingComplaintsJPanel.setBackground(new java.awt.Color(29, 34, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout sellingComplaintsJPanelLayout = new javax.swing.GroupLayout(sellingComplaintsJPanel);
        sellingComplaintsJPanel.setLayout(sellingComplaintsJPanelLayout);
        sellingComplaintsJPanelLayout.setHorizontalGroup(
            sellingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellingComplaintsJPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        sellingComplaintsJPanelLayout.setVerticalGroup(
            sellingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellingComplaintsJPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(361, Short.MAX_VALUE))
        );

        ComplaintManagerTab.addTab("Selling ", sellingComplaintsJPanel);

        buyingComplaintsJPanel.setBackground(new java.awt.Color(29, 34, 40));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        javax.swing.GroupLayout buyingComplaintsJPanelLayout = new javax.swing.GroupLayout(buyingComplaintsJPanel);
        buyingComplaintsJPanel.setLayout(buyingComplaintsJPanelLayout);
        buyingComplaintsJPanelLayout.setHorizontalGroup(
            buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        buyingComplaintsJPanelLayout.setVerticalGroup(
            buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(368, Short.MAX_VALUE))
        );

        ComplaintManagerTab.addTab("Buying ", buyingComplaintsJPanel);

        tempAccomodationsComplaintsJPanel.setBackground(new java.awt.Color(29, 34, 40));

        TempComplaintsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Price Per Day", "Complaint Against", "Comment", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TempComplaintsTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Address:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Facilities:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price Per Day:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Contact:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Distance from university:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Occupancy for:");

        tempSendToAdmin.setBackground(new java.awt.Color(251, 129, 34));
        tempSendToAdmin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tempSendToAdmin.setForeground(new java.awt.Color(255, 255, 255));
        tempSendToAdmin.setText("Send to Admin for Deletion");
        tempSendToAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tempSendToAdmin.setBorderPainted(false);
        tempSendToAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempSendToAdminActionPerformed(evt);
            }
        });

        btnTempOK.setBackground(new java.awt.Color(251, 129, 34));
        btnTempOK.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnTempOK.setForeground(new java.awt.Color(255, 255, 255));
        btnTempOK.setText("Mark as OK");
        btnTempOK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTempOK.setBorderPainted(false);
        btnTempOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTempOKActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Comment:");

        javax.swing.GroupLayout tempAccomodationsComplaintsJPanelLayout = new javax.swing.GroupLayout(tempAccomodationsComplaintsJPanel);
        tempAccomodationsComplaintsJPanel.setLayout(tempAccomodationsComplaintsJPanelLayout);
        tempAccomodationsComplaintsJPanelLayout.setHorizontalGroup(
            tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTempPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTempComment, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(4, 4, 4)
                        .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTempFacilities, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(lblTempAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblTempDistance, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                            .addComponent(lblTempContact, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTempOccupancy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(tempSendToAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTempOK, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tempAccomodationsComplaintsJPanelLayout.setVerticalGroup(
            tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblTempAddress)
                    .addComponent(lblTempContact)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblTempFacilities, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel6)
                    .addComponent(lblTempDistance))
                .addGap(36, 36, 36)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(lblTempPrice)
                        .addComponent(jLabel7))
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addComponent(lblTempOccupancy, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtTempComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempSendToAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTempOK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(136, 136, 136))
        );

        tempAccomodationsComplaintsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblTempAddress, lblTempContact, lblTempDistance, lblTempOccupancy, lblTempPrice});

        ComplaintManagerTab.addTab("Temporary Accomodation ", tempAccomodationsComplaintsJPanel);

        permAccomodationsComplaintsJPanel.setBackground(new java.awt.Color(29, 34, 40));

        PermanentComplaintsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Rent", "Complaint against", "Comments", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(PermanentComplaintsTable);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Address:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Rent:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Facilities:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Contact:");

        PermSendToAdminbtn.setBackground(new java.awt.Color(251, 129, 34));
        PermSendToAdminbtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PermSendToAdminbtn.setForeground(new java.awt.Color(255, 255, 255));
        PermSendToAdminbtn.setText("Send to Admin for Deletion");
        PermSendToAdminbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PermSendToAdminbtn.setBorderPainted(false);
        PermSendToAdminbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PermSendToAdminbtnActionPerformed(evt);
            }
        });

        btnPermOk.setBackground(new java.awt.Color(251, 129, 34));
        btnPermOk.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPermOk.setForeground(new java.awt.Color(255, 255, 255));
        btnPermOk.setText("Mark as OK");
        btnPermOk.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnPermOk.setBorderPainted(false);
        btnPermOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPermOkActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Total People in house:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Comment:");

        javax.swing.GroupLayout permAccomodationsComplaintsJPanelLayout = new javax.swing.GroupLayout(permAccomodationsComplaintsJPanel);
        permAccomodationsComplaintsJPanel.setLayout(permAccomodationsComplaintsJPanelLayout);
        permAccomodationsComplaintsJPanelLayout.setHorizontalGroup(
            permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPermFacilities, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPermAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPermRent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE))
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18))
                                    .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(19, 19, 19))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)))
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblPermTotalPpl, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                .addComponent(lblPermContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtPermComment, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(117, 117, 117)))
                .addContainerGap())
            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(PermSendToAdminbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPermOk, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        permAccomodationsComplaintsJPanelLayout.setVerticalGroup(
            permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lblPermAddress))
                        .addGap(32, 32, 32)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lblPermFacilities)))
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPermContact)
                            .addComponent(jLabel11))
                        .addGap(37, 37, 37)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(lblPermTotalPpl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblPermRent)
                        .addComponent(jLabel9))
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(txtPermComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PermSendToAdminbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPermOk, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(166, Short.MAX_VALUE))
        );

        permAccomodationsComplaintsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblPermAddress, lblPermContact, lblPermFacilities, lblPermRent, lblPermTotalPpl});

        ComplaintManagerTab.addTab("Permanent Accomodtion ", permAccomodationsComplaintsJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComplaintManagerTab, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ComplaintManagerTab, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateTemporaryAccomodtionComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) TempComplaintsTable.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<Temporary>> latestDirectory = temporaryDirectory.getTemporaryDirectory();
        for (String key : latestDirectory.keySet()) {
            for (Temporary value : latestDirectory.get(key)) {
                if (value.getStatusOfPost().equals("Reported")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getHostName();
                    row[2] = value.getComment();
                    row[3] = value.getStatusOfPost();
                    model.addRow(row);
                }
            }
        }
    }

    private void populatePermanentAccomodtionComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) PermanentComplaintsTable.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<Permanent>> latestDirectory = permanentDirectory.getPermanentDirectory();
        for (String key : latestDirectory.keySet()) {
            for (Permanent value : latestDirectory.get(key)) {
                if (value.getStatusOfPost().equals("Reported")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getHostName();
                    row[2] = value.getComment();
                    row[3] = value.getStatusOfPost();
                    model.addRow(row);
                }
            }
        }
    }
    private void ComplaintManagerTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ComplaintManagerTabStateChanged
        if (ComplaintManagerTab.getSelectedIndex() == 2) {
            populateTemporaryAccomodtionComplaintsTable();
            initTempListerners();
        }
        if (ComplaintManagerTab.getSelectedIndex() == 3) {
            populatePermanentAccomodtionComplaintsTable();
            initPermListerners();
        }
    }//GEN-LAST:event_ComplaintManagerTabStateChanged

    private void PermSendToAdminbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PermSendToAdminbtnActionPerformed
        int selectedRow = PermanentComplaintsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to send");
            return;
        } else {
            if (txtPermComment.getText().trim() != null && txtPermComment.getText().trim() != "") {
                per = (Permanent) PermanentComplaintsTable.getValueAt(selectedRow, 0);
                per.setStatusOfPost("Delete");
                per.setComment("From Complaint Manager: " + txtPermComment.getText().trim());
                JOptionPane.showMessageDialog(null, "Admin will delete the post!");
                populatePermanentAccomodtionComplaintsTable();
                lblPermAddress.setText(null);
                lblPermContact.setText(null);
                lblPermFacilities.setText(null);
                lblPermRent.setText(null);
                lblPermTotalPpl.setText(null);
                txtPermComment.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the comments first");
                return;
            }
        }
    }//GEN-LAST:event_PermSendToAdminbtnActionPerformed

    private void tempSendToAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempSendToAdminActionPerformed
        int selectedRow = TempComplaintsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to send");
            return;
        } else {
            if (null != txtTempComment.getText().trim() && !txtTempComment.getText().trim().equals("")) {
                temp = (Temporary) TempComplaintsTable.getValueAt(selectedRow, 0);
                temp.setStatusOfPost("Delete");
                temp.setComment("From Complaint Manager: " + txtTempComment.getText().trim());
                JOptionPane.showMessageDialog(null, "Admin will delete the post!");
                populateTemporaryAccomodtionComplaintsTable();
                lblTempAddress.setText(null);
                lblTempContact.setText(null);
                lblTempDistance.setText(null);
                lblTempFacilities.setText(null);
                lblTempOccupancy.setText(null);
                lblTempPrice.setText(null);
                txtTempComment.setText(null);
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the comments first");
                return;
            }
        }
    }//GEN-LAST:event_tempSendToAdminActionPerformed

    private void btnTempOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTempOKActionPerformed
        int selectedRow = TempComplaintsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post");
            return;
        } else {
            txtTempComment.setText(null);
            temp = (Temporary) TempComplaintsTable.getValueAt(selectedRow, 0);
            temp.setStatusOfPost("Ok");
            temp.setComment("");
            JOptionPane.showMessageDialog(null, "Post will be kept in the list");
            populateTemporaryAccomodtionComplaintsTable();
            lblTempAddress.setText(null);
            lblTempContact.setText(null);
            lblTempDistance.setText(null);
            lblTempFacilities.setText(null);
            lblTempOccupancy.setText(null);
            lblTempPrice.setText(null);
            txtTempComment.setText(null);

        }
    }//GEN-LAST:event_btnTempOKActionPerformed

    private void btnPermOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPermOkActionPerformed
        int selectedRow = PermanentComplaintsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post");
            return;
        } else {
            txtPermComment.setText(null);
            per = (Permanent) PermanentComplaintsTable.getValueAt(selectedRow, 0);
            per.setStatusOfPost("Ok");
            per.setComment("");
            JOptionPane.showMessageDialog(null, "Admin will delete the post!");
            populateTemporaryAccomodtionComplaintsTable();
            lblPermAddress.setText(null);
            lblPermContact.setText(null);
            lblPermFacilities.setText(null);
            lblPermRent.setText(null);
            lblPermTotalPpl.setText(null);
        }
    }//GEN-LAST:event_btnPermOkActionPerformed
    private void initTempListerners() {
        TempComplaintsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = TempComplaintsTable.getSelectedRow();
                if (selectedRow >= 0) {
                    Temporary temp = (Temporary) TempComplaintsTable.getValueAt(selectedRow, 0);
                    if (null != temp) {
                        lblTempAddress.setText(temp.getAddress().trim());
                        lblTempContact.setText(temp.getContact().trim());
                        lblTempDistance.setText(String.valueOf(temp.getDistanceFromUniversity()));
                        lblTempFacilities.setText(temp.getFacilities().trim());
                        lblTempOccupancy.setText(String.valueOf(temp.getOccupancyFor()));
                        lblTempPrice.setText(String.valueOf(temp.getPricePerDay()));
                        
                    }

                }
            }
        });
    }

    private void initPermListerners() {
        PermanentComplaintsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = PermanentComplaintsTable.getSelectedRow();
                if (selectedRow >= 0) {
                    Permanent per = (Permanent) PermanentComplaintsTable.getValueAt(selectedRow, 0);
                    if (null != per) {
                        lblPermAddress.setText(per.getAddress().trim());
                        lblPermContact.setText(per.getContact().trim());
                        lblPermFacilities.setText(per.getFacilities().trim());
                        lblPermRent.setText(String.valueOf(per.getRent()));
                        lblPermTotalPpl.setText(String.valueOf(per.getTotalPeopleInHouse()));

                    }

                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane ComplaintManagerTab;
    private javax.swing.JButton PermSendToAdminbtn;
    private javax.swing.JTable PermanentComplaintsTable;
    private javax.swing.JTable TempComplaintsTable;
    private javax.swing.JButton btnPermOk;
    private javax.swing.JButton btnTempOK;
    private javax.swing.JPanel buyingComplaintsJPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblPermAddress;
    private javax.swing.JLabel lblPermContact;
    private javax.swing.JLabel lblPermFacilities;
    private javax.swing.JLabel lblPermRent;
    private javax.swing.JLabel lblPermTotalPpl;
    private javax.swing.JLabel lblTempAddress;
    private javax.swing.JLabel lblTempContact;
    private javax.swing.JLabel lblTempDistance;
    private javax.swing.JLabel lblTempFacilities;
    private javax.swing.JLabel lblTempOccupancy;
    private javax.swing.JLabel lblTempPrice;
    private javax.swing.JPanel permAccomodationsComplaintsJPanel;
    private javax.swing.JPanel sellingComplaintsJPanel;
    private javax.swing.JPanel tempAccomodationsComplaintsJPanel;
    private javax.swing.JButton tempSendToAdmin;
    private javax.swing.JTextField txtPermComment;
    private javax.swing.JTextField txtTempComment;
    // End of variables declaration//GEN-END:variables
}
