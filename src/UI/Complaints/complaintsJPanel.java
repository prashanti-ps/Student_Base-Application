/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Complaints;

import business.EcoSystem;
import business.Purchase.Purchase;
import business.Purchase.PurchaseDirectory;
import business.Rent.RentProduct;
import business.Rent.RentProductDirectory;
import business.student.accomodation.Permanent;
import business.student.accomodation.PermanentDirectory;
import business.student.accomodation.Temporary;
import business.student.accomodation.TemporaryDirectory;
import business.useraccount.UserAccount;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prashantii_s
 */
public class complaintsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form complaintsJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAccount;
    TemporaryDirectory temporaryDirectory;
    PermanentDirectory permanentDirectory;
    PurchaseDirectory purchaseDirectory;
    RentProductDirectory rentProductDirectory;
    Temporary temp;
    Permanent per;
    Purchase pur;
    RentProduct ren;

    public complaintsJPanel() {

    }

    public complaintsJPanel(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecosystem) {
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;        
        this.userAccount = userAccount;
        this.temporaryDirectory = ecosystem.getTemporaryDirectory();
        this.permanentDirectory = ecosystem.getPermanentDirectory();
        this.purchaseDirectory = ecosystem.getPurchaseDirectory();
        this.rentProductDirectory=ecosystem.getRentProductDirectory();
            initComponents();
        populateComplaintsTable();
        initPurchaseListerners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ComplaintManagerTab = new javax.swing.JTabbedPane();
        buyingComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblComplaintsPurchase = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JLabel();
        txtProductCategory = new javax.swing.JLabel();
        txtProductCondition = new javax.swing.JLabel();
        txtProductQuantity = new javax.swing.JLabel();
        txtProductAddress = new javax.swing.JLabel();
        lblProductImage = new javax.swing.JLabel();
        btnSendtoAdminProduct = new javax.swing.JButton();
        btnOKProduct = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        txtPurchaseComment = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        tempAccomodationsComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TempComplaintsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tempSendToAdmin = new javax.swing.JButton();
        btnTempOK = new javax.swing.JButton();
        lblTempAddress = new javax.swing.JLabel();
        lblTempFacilities = new javax.swing.JLabel();
        lblTempPrice = new javax.swing.JLabel();
        lblTempContact = new javax.swing.JLabel();
        lblTempDistance = new javax.swing.JLabel();
        lblTempOccupancy = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtTempComment = new javax.swing.JTextField();
        permAccomodationsComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PermanentComplaintsTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        PermSendToAdminbtn = new javax.swing.JButton();
        btnPermOk = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtPermComment = new javax.swing.JTextField();
        lblPermAddress = new javax.swing.JLabel();
        lblPermFacilities = new javax.swing.JLabel();
        lblPermRent = new javax.swing.JLabel();
        lblPermContact = new javax.swing.JLabel();
        lblPermTotalPpl = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRentComplaints = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtRentProductName = new javax.swing.JLabel();
        txtRentCategory = new javax.swing.JLabel();
        txtRentCondition = new javax.swing.JLabel();
        txtRentPeriod = new javax.swing.JLabel();
        txtRentAddress = new javax.swing.JLabel();
        txtRentImage = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtRentComment = new javax.swing.JTextField();
        btnRentSendToAdmin = new javax.swing.JButton();
        btnMarkAsOK = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(29, 34, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Complaint Manager");

        ComplaintManagerTab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ComplaintManagerTabStateChanged(evt);
            }
        });

        buyingComplaintsJPanel.setBackground(new java.awt.Color(29, 34, 40));
        buyingComplaintsJPanel.setForeground(new java.awt.Color(255, 255, 255));

        tblComplaintsPurchase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Complaint Against ", "Status", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblComplaintsPurchase);

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Product:");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Category:");

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Condition:");

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Quantity:");

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Address:");

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Product Image:");

        txtProductName.setForeground(new java.awt.Color(255, 255, 255));

        txtProductCategory.setForeground(new java.awt.Color(255, 255, 255));

        txtProductCondition.setForeground(new java.awt.Color(255, 255, 255));

        txtProductQuantity.setForeground(new java.awt.Color(255, 255, 255));

        txtProductAddress.setForeground(new java.awt.Color(255, 255, 255));

        btnSendtoAdminProduct.setBackground(new java.awt.Color(251, 129, 34));
        btnSendtoAdminProduct.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnSendtoAdminProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnSendtoAdminProduct.setText("Send to Admin ");
        btnSendtoAdminProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnSendtoAdminProduct.setBorderPainted(false);
        btnSendtoAdminProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendtoAdminProductActionPerformed(evt);
            }
        });

        btnOKProduct.setBackground(new java.awt.Color(251, 129, 34));
        btnOKProduct.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnOKProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnOKProduct.setText("Mark as Ok");
        btnOKProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnOKProduct.setBorderPainted(false);
        btnOKProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKProductActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Comment:");

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Products For Sale:");

        javax.swing.GroupLayout buyingComplaintsJPanelLayout = new javax.swing.GroupLayout(buyingComplaintsJPanel);
        buyingComplaintsJPanel.setLayout(buyingComplaintsJPanelLayout);
        buyingComplaintsJPanelLayout.setHorizontalGroup(
            buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                        .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, buyingComplaintsJPanelLayout.createSequentialGroup()
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProductCategory, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtProductCondition, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(66, 66, 66)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(46, 46, 46)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtProductQuantity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                        .addComponent(txtProductAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(35, 35, 35))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, buyingComplaintsJPanelLayout.createSequentialGroup()
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel20))
                                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel27)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPurchaseComment, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(lblProductImage, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                        .addComponent(btnSendtoAdminProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(btnOKProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(25, 25, 25)))
                        .addContainerGap(161, Short.MAX_VALUE))))
        );

        buyingComplaintsJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtProductCategory, txtProductCondition, txtProductName});

        buyingComplaintsJPanelLayout.setVerticalGroup(
            buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buyingComplaintsJPanelLayout.createSequentialGroup()
                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblProductImage, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSendtoAdminProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOKProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3))
                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addGap(21, 21, 21)
                        .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 13, Short.MAX_VALUE)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel15)
                                    .addComponent(txtProductCategory, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(txtProductCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE))
                            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(txtProductQuantity))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 39, Short.MAX_VALUE)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtProductAddress, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                                .addComponent(jLabel20)
                                .addGap(81, 81, 81)))
                        .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(txtPurchaseComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        buyingComplaintsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtProductAddress, txtProductCategory, txtProductCondition, txtProductQuantity});

        ComplaintManagerTab.addTab("Purchase", buyingComplaintsJPanel);

        tempAccomodationsComplaintsJPanel.setBackground(new java.awt.Color(29, 34, 40));

        TempComplaintsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Price Per Day", "Complaint Against", "Comment", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TempComplaintsTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Address:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Facilities:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price Per Day:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Contact:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Distance from university:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Occupancy for:");

        tempSendToAdmin.setBackground(new java.awt.Color(251, 129, 34));
        tempSendToAdmin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tempSendToAdmin.setForeground(new java.awt.Color(255, 255, 255));
        tempSendToAdmin.setText("Send to Admin for Deletion");
        tempSendToAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tempSendToAdmin.setBorderPainted(false);
        tempSendToAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempSendToAdminActionPerformed(evt);
            }
        });

        btnTempOK.setBackground(new java.awt.Color(251, 129, 34));
        btnTempOK.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnTempOK.setForeground(new java.awt.Color(255, 255, 255));
        btnTempOK.setText("Mark as OK");
        btnTempOK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTempOK.setBorderPainted(false);
        btnTempOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTempOKActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Comment:");

        javax.swing.GroupLayout tempAccomodationsComplaintsJPanelLayout = new javax.swing.GroupLayout(tempAccomodationsComplaintsJPanel);
        tempAccomodationsComplaintsJPanel.setLayout(tempAccomodationsComplaintsJPanelLayout);
        tempAccomodationsComplaintsJPanelLayout.setHorizontalGroup(
            tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1091, Short.MAX_VALUE)
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblTempPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTempComment, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)))
                            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(4, 4, 4)
                                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblTempFacilities, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                    .addComponent(lblTempAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(45, 45, 45)
                                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblTempDistance, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                    .addComponent(lblTempContact, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTempOccupancy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(tempSendToAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTempOK, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(452, Short.MAX_VALUE))
        );
        tempAccomodationsComplaintsJPanelLayout.setVerticalGroup(
            tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(lblTempAddress)
                    .addComponent(lblTempContact)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblTempFacilities, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel6)
                    .addComponent(lblTempDistance))
                .addGap(36, 36, 36)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(lblTempPrice)
                        .addComponent(jLabel7))
                    .addGroup(tempAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addComponent(lblTempOccupancy, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 122, Short.MAX_VALUE)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtTempComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(tempAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempSendToAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTempOK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(277, Short.MAX_VALUE))
        );

        tempAccomodationsComplaintsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblTempAddress, lblTempContact, lblTempDistance, lblTempOccupancy, lblTempPrice});

        ComplaintManagerTab.addTab("Temporary Accomodation ", tempAccomodationsComplaintsJPanel);

        permAccomodationsComplaintsJPanel.setBackground(new java.awt.Color(29, 34, 40));

        PermanentComplaintsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Rent", "Complaint against", "Comments", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(PermanentComplaintsTable);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Address:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Rent:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Facilities:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Contact:");

        PermSendToAdminbtn.setBackground(new java.awt.Color(251, 129, 34));
        PermSendToAdminbtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PermSendToAdminbtn.setForeground(new java.awt.Color(255, 255, 255));
        PermSendToAdminbtn.setText("Send to Admin for Deletion");
        PermSendToAdminbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PermSendToAdminbtn.setBorderPainted(false);
        PermSendToAdminbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PermSendToAdminbtnActionPerformed(evt);
            }
        });

        btnPermOk.setBackground(new java.awt.Color(251, 129, 34));
        btnPermOk.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPermOk.setForeground(new java.awt.Color(255, 255, 255));
        btnPermOk.setText("Mark as OK");
        btnPermOk.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnPermOk.setBorderPainted(false);
        btnPermOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPermOkActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Total People in house:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Comment:");

        javax.swing.GroupLayout permAccomodationsComplaintsJPanelLayout = new javax.swing.GroupLayout(permAccomodationsComplaintsJPanel);
        permAccomodationsComplaintsJPanel.setLayout(permAccomodationsComplaintsJPanelLayout);
        permAccomodationsComplaintsJPanelLayout.setHorizontalGroup(
            permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1077, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPermFacilities, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPermAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPermRent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE))
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18))
                                    .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(19, 19, 19))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)))
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblPermTotalPpl, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                .addComponent(lblPermContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtPermComment, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(117, 117, 117)))
                .addContainerGap())
            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(PermSendToAdminbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPermOk, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        permAccomodationsComplaintsJPanelLayout.setVerticalGroup(
            permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lblPermAddress))
                        .addGap(32, 32, 32)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(lblPermFacilities)))
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPermContact)
                            .addComponent(jLabel11))
                        .addGap(37, 37, 37)
                        .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(lblPermTotalPpl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblPermRent)
                        .addComponent(jLabel9))
                    .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(txtPermComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51)
                .addGroup(permAccomodationsComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PermSendToAdminbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPermOk, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(395, Short.MAX_VALUE))
        );

        permAccomodationsComplaintsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblPermAddress, lblPermContact, lblPermFacilities, lblPermRent, lblPermTotalPpl});

        ComplaintManagerTab.addTab("Permanent Accomodtion ", permAccomodationsComplaintsJPanel);

        jPanel1.setBackground(new java.awt.Color(29, 34, 40));

        tblRentComplaints.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Complaint Against", "Status", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRentComplaints);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Product Name:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Category:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Condition:");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Availability Period:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Address:");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Product Image:");

        txtRentProductName.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtRentProductName.setForeground(new java.awt.Color(255, 255, 255));

        txtRentCategory.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtRentCategory.setForeground(new java.awt.Color(255, 255, 255));

        txtRentCondition.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtRentCondition.setForeground(new java.awt.Color(255, 255, 255));

        txtRentPeriod.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtRentPeriod.setForeground(new java.awt.Color(255, 255, 255));

        txtRentAddress.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtRentAddress.setForeground(new java.awt.Color(255, 255, 255));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Comment:");

        btnRentSendToAdmin.setBackground(new java.awt.Color(251, 129, 34));
        btnRentSendToAdmin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRentSendToAdmin.setForeground(new java.awt.Color(255, 255, 255));
        btnRentSendToAdmin.setText("Send To Admin");
        btnRentSendToAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnRentSendToAdmin.setBorderPainted(false);
        btnRentSendToAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRentSendToAdminActionPerformed(evt);
            }
        });

        btnMarkAsOK.setBackground(new java.awt.Color(251, 129, 34));
        btnMarkAsOK.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMarkAsOK.setForeground(new java.awt.Color(255, 255, 255));
        btnMarkAsOK.setText("Mark as Ok");
        btnMarkAsOK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnMarkAsOK.setBorderPainted(false);
        btnMarkAsOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkAsOKActionPerformed(evt);
            }
        });

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Months");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(55, 55, 55)
                                .addComponent(txtRentProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel24))
                                .addGap(74, 74, 74)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRentCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRentCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel26)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRentImage, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtRentAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRentPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addComponent(jLabel30)))
                        .addGap(331, 331, 331))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(140, 140, 140)
                                        .addComponent(txtRentComment, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel29))
                                .addGap(73, 73, 73)
                                .addComponent(btnRentSendToAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btnMarkAsOK, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(301, 301, 301))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtRentAddress, txtRentCategory, txtRentCondition, txtRentPeriod, txtRentProductName});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(txtRentProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRentPeriod)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel22))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel30)))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel26)
                    .addComponent(txtRentCategory)
                    .addComponent(txtRentAddress))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel28))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRentImage, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24)
                                .addComponent(txtRentCondition)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(txtRentComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRentSendToAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMarkAsOK, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtRentAddress, txtRentCategory, txtRentCondition, txtRentPeriod, txtRentProductName});

        ComplaintManagerTab.addTab("Rental", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ComplaintManagerTab)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ComplaintManagerTab))
        );
    }// </editor-fold>//GEN-END:initComponents
private void populateComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) tblComplaintsPurchase.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<Purchase>> latestDirectory = purchaseDirectory.getPurchaseDirectory();
        for (String key : latestDirectory.keySet()) {
            for (Purchase value : latestDirectory.get(key)) {
                if (value.getStatus().equals("Reported")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getContact();
                    row[2] = value.getStatus();
                    row[3] = value.getComment();
                    model.addRow(row);
                }
            }
        }
    }

    private void populateTemporaryAccomodtionComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) TempComplaintsTable.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<Temporary>> latestDirectory = temporaryDirectory.getTemporaryDirectory();
        for (String key : latestDirectory.keySet()) {
            for (Temporary value : latestDirectory.get(key)) {
                if (value.getStatusOfPost().equals("Reported")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getHostName();
                    row[2] = value.getComment();
                    row[3] = value.getStatusOfPost();
                    model.addRow(row);
                }
            }
        }
    }

    private void populatePermanentAccomodtionComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) PermanentComplaintsTable.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<Permanent>> latestDirectory = permanentDirectory.getPermanentDirectory();
        for (String key : latestDirectory.keySet()) {
            for (Permanent value : latestDirectory.get(key)) {
                if (value.getStatusOfPost().equals("Reported")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getHostName();
                    row[2] = value.getComment();
                    row[3] = value.getStatusOfPost();
                    model.addRow(row);
                }
            }
        }
    }
     private void populateRentalComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) tblRentComplaints.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<RentProduct>> latestDirectory = rentProductDirectory.getRentProductDirectory();
        for (String key : latestDirectory.keySet()) {
            for (RentProduct value : latestDirectory.get(key)) {
                if (value.getStatus().equals("Reported")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getContact();
                    row[2] = value.getComment();
                    row[3] = value.getStatus();
                    model.addRow(row);
                }
            }
        }
    }
    private void ComplaintManagerTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ComplaintManagerTabStateChanged
        if (ComplaintManagerTab.getSelectedIndex() == 0) {
            populateComplaintsTable();
            initPurchaseListerners();
        }
        if (ComplaintManagerTab.getSelectedIndex() == 1) {
            populateTemporaryAccomodtionComplaintsTable();
            initTempListerners();
        }
        if (ComplaintManagerTab.getSelectedIndex() == 2) {
            populatePermanentAccomodtionComplaintsTable();
            initPermListerners();
        }
        if (ComplaintManagerTab.getSelectedIndex() == 3) {
            populateRentalComplaintsTable();
            initRentListerners();
        }
    }//GEN-LAST:event_ComplaintManagerTabStateChanged

    private void PermSendToAdminbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PermSendToAdminbtnActionPerformed
        int selectedRow = PermanentComplaintsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to send");
            return;
        } else {
            if (txtPermComment.getText().trim() != null && txtPermComment.getText().trim() != "") {
                per = (Permanent) PermanentComplaintsTable.getValueAt(selectedRow, 0);
                per.setStatusOfPost("Delete");
                per.setComment("From Complaint Manager: " + txtPermComment.getText().trim());
                JOptionPane.showMessageDialog(null, "Admin will delete the post!");
                populatePermanentAccomodtionComplaintsTable();
                lblPermAddress.setText(null);
                lblPermContact.setText(null);
                lblPermFacilities.setText(null);
                lblPermRent.setText(null);
                lblPermTotalPpl.setText(null);
                txtPermComment.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the comments first");
                return;
            }
        }
    }//GEN-LAST:event_PermSendToAdminbtnActionPerformed

    private void tempSendToAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempSendToAdminActionPerformed
        int selectedRow = TempComplaintsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to send");
            return;
        } else {
            if (null != txtTempComment.getText().trim() && !txtTempComment.getText().trim().equals("")) {
                temp = (Temporary) TempComplaintsTable.getValueAt(selectedRow, 0);
                temp.setStatusOfPost("Delete");
                temp.setComment("From Complaint Manager: " + txtTempComment.getText().trim());
                JOptionPane.showMessageDialog(null, "Admin will delete the post!");
                populateTemporaryAccomodtionComplaintsTable();
                lblTempAddress.setText(null);
                lblTempContact.setText(null);
                lblTempDistance.setText(null);
                lblTempFacilities.setText(null);
                lblTempOccupancy.setText(null);
                lblTempPrice.setText(null);
                txtTempComment.setText(null);
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the comments first");
                return;
            }
        }
    }//GEN-LAST:event_tempSendToAdminActionPerformed

    private void btnTempOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTempOKActionPerformed
        int selectedRow = TempComplaintsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post");
            return;
        } else {
            txtTempComment.setText(null);
            temp = (Temporary) TempComplaintsTable.getValueAt(selectedRow, 0);
            temp.setStatusOfPost("Ok");
            temp.setComment("");
            JOptionPane.showMessageDialog(null, "Post will be kept in the list");
            populateTemporaryAccomodtionComplaintsTable();
            lblTempAddress.setText(null);
            lblTempContact.setText(null);
            lblTempDistance.setText(null);
            lblTempFacilities.setText(null);
            lblTempOccupancy.setText(null);
            lblTempPrice.setText(null);
            txtTempComment.setText(null);

        }
    }//GEN-LAST:event_btnTempOKActionPerformed

    private void btnPermOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPermOkActionPerformed
        int selectedRow = PermanentComplaintsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post");
            return;
        } else {
            txtPermComment.setText(null);
            per = (Permanent) PermanentComplaintsTable.getValueAt(selectedRow, 0);
            per.setStatusOfPost("Ok");
            per.setComment("");
            JOptionPane.showMessageDialog(null, "Post will be kept in the list!");
            populateTemporaryAccomodtionComplaintsTable();
            lblPermAddress.setText(null);
            lblPermContact.setText(null);
            lblPermFacilities.setText(null);
            lblPermRent.setText(null);
            lblPermTotalPpl.setText(null);
        }
    }//GEN-LAST:event_btnPermOkActionPerformed

    private void btnSendtoAdminProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendtoAdminProductActionPerformed
        int selectedRow = tblComplaintsPurchase.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to send");
            return;
        } else {
            if (null != txtPurchaseComment.getText().trim() && !txtPurchaseComment.getText().trim().equals("")) {
                pur = (Purchase) tblComplaintsPurchase.getValueAt(selectedRow, 0);
                pur.setStatus("Delete");
                pur.setComment("From Complaint Manager: " + txtPurchaseComment.getText().trim());
                JOptionPane.showMessageDialog(null, "Admin will delete the post!");
                populateComplaintsTable();
                txtProductAddress.setText(null);
                txtProductCategory.setText(null);
                txtProductCondition.setText(null);
                txtProductName.setText(null);
                txtProductQuantity.setText(null);
                lblProductImage.setIcon(null);
                txtPurchaseComment.setText(null);
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the comments first");
                return;
            }
        }
    }//GEN-LAST:event_btnSendtoAdminProductActionPerformed

    private void btnOKProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKProductActionPerformed
        int selectedRow = tblComplaintsPurchase.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post");
            return;
        } else {
            txtPurchaseComment.setText(null);
            pur = (Purchase) tblComplaintsPurchase.getValueAt(selectedRow, 0);
            pur.setStatus("Ok");
            pur.setComment("");
            JOptionPane.showMessageDialog(null, "Post will be kept in the list");
            populateComplaintsTable();
            txtProductAddress.setText(null);
            txtProductCategory.setText(null);
            txtProductCondition.setText(null);
            txtProductName.setText(null);
            txtProductQuantity.setText(null);
            lblProductImage.setIcon(null);
            txtPurchaseComment.setText(null);
        }
    }//GEN-LAST:event_btnOKProductActionPerformed

    private void btnMarkAsOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarkAsOKActionPerformed
        int selectedRow = tblRentComplaints.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post");
            return;
        } else {
            txtRentComment.setText(null);
            ren = (RentProduct) tblRentComplaints.getValueAt(selectedRow, 0);
            ren.setStatus("Ok");
            ren.setComment("");
            JOptionPane.showMessageDialog(null, "Post will be kept in the list");
             populateRentalComplaintsTable();
            txtRentAddress.setText(null);
                txtRentCategory.setText(null);
                txtRentCondition.setText(null);
                txtRentPeriod.setText(null);
                txtRentProductName.setText(null);
                txtRentImage.setIcon(null);
                txtRentComment.setText(null);
        }
    }//GEN-LAST:event_btnMarkAsOKActionPerformed

    private void btnRentSendToAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRentSendToAdminActionPerformed
     int selectedRow = tblRentComplaints.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to send");
            return;
        } else {
            if (null != txtRentComment.getText().trim() && !txtRentComment.getText().trim().equals("")) {
                ren = (RentProduct) tblRentComplaints.getValueAt(selectedRow, 0);
                ren.setStatus("Delete");
                ren.setComment("From Complaint Manager: " + txtPurchaseComment.getText().trim());
                JOptionPane.showMessageDialog(null, "Admin will delete the post!");
                populateRentalComplaintsTable();
                txtRentAddress.setText(null);
                txtRentCategory.setText(null);
                txtRentCondition.setText(null);
                txtRentPeriod.setText(null);
                txtRentProductName.setText(null);
                txtRentImage.setIcon(null);
                txtRentComment.setText(null);
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the comments first");
                return;
            }
        }
    }//GEN-LAST:event_btnRentSendToAdminActionPerformed
    private void initTempListerners() {
        TempComplaintsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = TempComplaintsTable.getSelectedRow();
                if (selectedRow >= 0) {
                    Temporary temp = (Temporary) TempComplaintsTable.getValueAt(selectedRow, 0);
                    if (null != temp) {
                        lblTempAddress.setText(temp.getAddress().trim());
                        lblTempContact.setText(temp.getContact().trim());
                        lblTempDistance.setText(String.valueOf(temp.getDistanceFromUniversity()));
                        lblTempFacilities.setText(temp.getFacilities().trim());
                        lblTempOccupancy.setText(String.valueOf(temp.getOccupancyFor()));
                        lblTempPrice.setText(String.valueOf(temp.getPricePerDay()));

                    }

                }
            }
        });
    }

    private void initPurchaseListerners() {
        tblComplaintsPurchase.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = tblComplaintsPurchase.getSelectedRow();
                if (selectedRow >= 0) {
                    Purchase pur = (Purchase) tblComplaintsPurchase.getValueAt(selectedRow, 0);
                    if (null != pur) {
                        txtProductAddress.setText(pur.getAddress());
                        txtProductCategory.setText(pur.getCategory());
                        txtProductCondition.setText(pur.getContidion());
                        txtProductName.setText(pur.getProductName());
                        txtProductQuantity.setText(String.valueOf(pur.getQuantity()));
                        ImageIcon photo = new ImageIcon(pur.getProductImage());
                        Image fitImage = photo.getImage();
                        Image fitSize = fitImage.getScaledInstance(220, 170, Image.SCALE_SMOOTH);
                        lblProductImage.setIcon(new ImageIcon(fitSize));

                    }

                }
            }
        });
    }
    private void initRentListerners() {
        tblRentComplaints.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = tblRentComplaints.getSelectedRow();
                if (selectedRow >= 0) {
                    RentProduct rent = (RentProduct) tblRentComplaints.getValueAt(selectedRow, 0);
                    if (null != rent) {
                        txtRentAddress.setText(rent.getAddress());
                        txtRentCategory.setText(rent.getCategory());
                        txtRentCondition.setText(rent.getContidion());
                        txtRentPeriod.setText(String.valueOf(rent.getAvailibilityPeriod()));
                        txtRentProductName.setText(rent.getProductName());
                        ImageIcon photo = new ImageIcon(rent.getProductImage());
                        Image fitImage = photo.getImage();
                        Image fitSize = fitImage.getScaledInstance(220, 170, Image.SCALE_SMOOTH);
                        txtRentImage.setIcon(new ImageIcon(fitSize));

                    }

                }
            }
        });
    }

    private void initPermListerners() {
        PermanentComplaintsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = PermanentComplaintsTable.getSelectedRow();
                if (selectedRow >= 0) {
                    Permanent per = (Permanent) PermanentComplaintsTable.getValueAt(selectedRow, 0);
                    if (null != per) {
                        lblPermAddress.setText(per.getAddress().trim());
                        lblPermContact.setText(per.getContact().trim());
                        lblPermFacilities.setText(per.getFacilities().trim());
                        lblPermRent.setText(String.valueOf(per.getRent()));
                        lblPermTotalPpl.setText(String.valueOf(per.getTotalPeopleInHouse()));

                    }

                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane ComplaintManagerTab;
    private javax.swing.JButton PermSendToAdminbtn;
    private javax.swing.JTable PermanentComplaintsTable;
    private javax.swing.JTable TempComplaintsTable;
    private javax.swing.JButton btnMarkAsOK;
    private javax.swing.JButton btnOKProduct;
    private javax.swing.JButton btnPermOk;
    private javax.swing.JButton btnRentSendToAdmin;
    private javax.swing.JButton btnSendtoAdminProduct;
    private javax.swing.JButton btnTempOK;
    private javax.swing.JPanel buyingComplaintsJPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblPermAddress;
    private javax.swing.JLabel lblPermContact;
    private javax.swing.JLabel lblPermFacilities;
    private javax.swing.JLabel lblPermRent;
    private javax.swing.JLabel lblPermTotalPpl;
    private javax.swing.JLabel lblProductImage;
    private javax.swing.JLabel lblTempAddress;
    private javax.swing.JLabel lblTempContact;
    private javax.swing.JLabel lblTempDistance;
    private javax.swing.JLabel lblTempFacilities;
    private javax.swing.JLabel lblTempOccupancy;
    private javax.swing.JLabel lblTempPrice;
    private javax.swing.JPanel permAccomodationsComplaintsJPanel;
    private javax.swing.JTable tblComplaintsPurchase;
    private javax.swing.JTable tblRentComplaints;
    private javax.swing.JPanel tempAccomodationsComplaintsJPanel;
    private javax.swing.JButton tempSendToAdmin;
    private javax.swing.JTextField txtPermComment;
    private javax.swing.JLabel txtProductAddress;
    private javax.swing.JLabel txtProductCategory;
    private javax.swing.JLabel txtProductCondition;
    private javax.swing.JLabel txtProductName;
    private javax.swing.JLabel txtProductQuantity;
    private javax.swing.JTextField txtPurchaseComment;
    private javax.swing.JLabel txtRentAddress;
    private javax.swing.JLabel txtRentCategory;
    private javax.swing.JTextField txtRentComment;
    private javax.swing.JLabel txtRentCondition;
    private javax.swing.JLabel txtRentImage;
    private javax.swing.JLabel txtRentPeriod;
    private javax.swing.JLabel txtRentProductName;
    private javax.swing.JTextField txtTempComment;
    // End of variables declaration//GEN-END:variables
}
