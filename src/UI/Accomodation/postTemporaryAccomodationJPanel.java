/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Accomodation;

import UI.Student.StudentDashboard;
import business.EcoSystem;
import business.student.accomodation.Permanent;
import javax.swing.JSplitPane;
import business.student.accomodation.PermanentDirectory;
import business.student.accomodation.Temporary;
import business.student.accomodation.TemporaryDirectory;
import business.useraccount.UserAccount;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prashantii_s
 */
public class postTemporaryAccomodationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form postTemporaryAccomodationJPanel
     */
    TemporaryDirectory temporaryDirectory;
    PermanentDirectory permanentDirectory;
    JSplitPane jSplitPane1;
    EcoSystem ecosystem;
    UserAccount userAccount;
    JPanel userProcessContainer;

    public postTemporaryAccomodationJPanel(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecosystem) {
        initComponents();
        this.ecosystem = ecosystem;
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        this.permanentDirectory = ecosystem.getPermanentDirectory();
        this.temporaryDirectory = ecosystem.getTemporaryDirectory();
        populateTable();
        clearFields();
        btnPost.setEnabled(false);
        btnUpdate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPanePermanentAccomodationList = new javax.swing.JScrollPane();
        tblAccomodation = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        txtToDate = new javax.swing.JTextField();
        txtPricePerDay = new javax.swing.JTextField();
        txtOccupancyFor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        comboBoxStatus = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaFacilities = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaAddress = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        btnPost = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaRequests = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        lblContact = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtDistance = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblHostName = new javax.swing.JLabel();
        lblFromDateCheck = new javax.swing.JLabel();
        lblToDateCheck = new javax.swing.JLabel();
        lblOccupancyCheck = new javax.swing.JLabel();
        lblPricePerDayCheck = new javax.swing.JLabel();
        lblDistanceCheck = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        tblAccomodation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ScrollPanePermanentAccomodationList.setViewportView(tblAccomodation);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel1.setText("From:");

        jLabel2.setText("Address:");

        jLabel3.setText("Price Per Day:");

        jLabel4.setText("To:");

        jLabel5.setText("Occupancy for:");

        txtFromDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFromDateKeyReleased(evt);
            }
        });

        txtToDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtToDateKeyReleased(evt);
            }
        });

        txtPricePerDay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPricePerDayKeyReleased(evt);
            }
        });

        txtOccupancyFor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOccupancyForActionPerformed(evt);
            }
        });
        txtOccupancyFor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOccupancyForKeyReleased(evt);
            }
        });

        jLabel6.setText("Status of Accomodation:");

        comboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Taken" }));

        jLabel7.setText("Facilities:");

        txtAreaFacilities.setColumns(20);
        txtAreaFacilities.setRows(5);
        jScrollPane2.setViewportView(txtAreaFacilities);

        txtAreaAddress.setColumns(20);
        txtAreaAddress.setRows(5);
        jScrollPane3.setViewportView(txtAreaAddress);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Post Temporary Accomodation");

        btnPost.setText("Post");
        btnPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel9.setText("USD");

        jLabel10.setText("Accomodation Requests");

        txtAreaRequests.setColumns(20);
        txtAreaRequests.setRows(5);
        jScrollPane4.setViewportView(txtAreaRequests);

        jLabel11.setText("Contact");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel12.setText("Distance From University");

        txtDistance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDistanceKeyReleased(evt);
            }
        });

        jLabel13.setText("Miles");

        jLabel14.setText("Host Name:");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Accomodation Details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 1212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                    .addGap(32, 32, 32))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel5)
                                                    .addGap(28, 28, 28)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(28, 28, 28)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblHostName, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtOccupancyFor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                                                    .addComponent(txtPricePerDay, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel9)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(lblPricePerDayCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(lblOccupancyCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtFromDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                                    .addComponent(txtToDate, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblToDateCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblFromDateCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(100, 100, 100)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblDistanceCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel6))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane4))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnAdd)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnEdit))
                                .addComponent(ScrollPanePermanentAccomodationList, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(btnPost, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addGap(3, 3, 3)
                .addComponent(ScrollPanePermanentAccomodationList, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit))
                .addGap(32, 32, 32)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(lblHostName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(17, 17, 17))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtToDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFromDateCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblToDateCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(txtPricePerDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addComponent(lblPricePerDayCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOccupancyCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtOccupancyFor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(comboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblContact, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(lblDistanceCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(290, 290, 290)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPost)
                    .addComponent(btnUpdate))
                .addGap(0, 62, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        StudentDashboard studentDashboardPanel = new StudentDashboard(userProcessContainer, userAccount, ecosystem);
        jSplitPane1.setRightComponent(studentDashboardPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblAccomodation.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to edit!");
            return;
        } else {
            btnUpdate.setEnabled(true);
            btnPost.setEnabled(false);
            DefaultTableModel model = (DefaultTableModel) tblAccomodation.getModel();
            Temporary t = (Temporary) model.getValueAt(selectedRowIndex, 0);

            lblHostName.setText(t.getHostName());
            txtFromDate.setText(t.getFromDate().toString());
            txtToDate.setText(t.getToDate().toString());
            txtAreaAddress.setText(t.getAddress());
            txtAreaFacilities.setText(t.getFacilities());
            txtPricePerDay.setText(String.valueOf(t.getPricePerDay()));
            txtOccupancyFor.setText(String.valueOf(t.getOccupancyFor()));
            txtAreaRequests.setText(t.getAccomodationRequests());
            comboBoxStatus.addItem(t.getStatusOfAccomodation());
            lblContact.setText(t.getContact());
            txtDistance.setText(String.valueOf(t.getDistanceFromUniversity()));

        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostActionPerformed
        // TODO add your handling code here:
        String email = "get from student object";
        Temporary t = new Temporary();
        t.setToDate(txtToDate.getText());
        t.setFromDate(txtFromDate.getText());
        t.setAddress(txtAreaAddress.getText());
        t.setFacilities(txtAreaFacilities.getText());
        t.setPricePerDay(Integer.parseInt(txtPricePerDay.getText()));
        t.setOccupancyFor(Integer.parseInt(txtOccupancyFor.getText()));
        t.setStatusOfAccomodation(comboBoxStatus.getItemAt(0));
        t.setContact(email);
        t.setStatusOfPost("ok");
        t.setHostName(lblHostName.getText());
        t.setDistanceFromUniversity(Double.parseDouble(txtDistance.getText()));

        temporaryDirectory.addNewTemporaryAccomodation(email, t);
        JOptionPane.showMessageDialog(this, "Accomodation Posted!");
        clearFields();
        populateTable();
        btnPost.setEnabled(false);

    }//GEN-LAST:event_btnPostActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        btnPost.setEnabled(true);
        clearFields();
        lblHostName.setText("from student object");
        txtAreaRequests.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblAccomodation.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update!");
            return;
        } else {
            //fieldsEnableDisable(true);
            DefaultTableModel model = (DefaultTableModel) tblAccomodation.getModel();
            Temporary t = (Temporary) model.getValueAt(selectedRowIndex, 0);
            Map<String, ArrayList<Temporary>> latestDirectory = temporaryDirectory.getTemporaryDirectory();
            ArrayList<Temporary> tempArr = latestDirectory.get(t.getContact());
            for (Temporary obj : tempArr) {
                if (obj.equals(t)) {
                    obj.setFromDate(txtFromDate.getText());
                    obj.setAddress(txtAreaAddress.getText());
                    obj.setFacilities(txtAreaFacilities.getText());
                    obj.setPricePerDay(Integer.parseInt(txtPricePerDay.getText()));
                    obj.setOccupancyFor(Integer.parseInt(txtOccupancyFor.getText()));
                    obj.setStatusOfAccomodation(comboBoxStatus.getItemAt(0));
                    obj.setContact(t.getContact());
                    obj.setHostName(t.getHostName());
                    obj.setDistanceFromUniversity(Double.parseDouble(txtDistance.getText()));
                    JOptionPane.showMessageDialog(this, "Record updated!");
                    btnUpdate.setEnabled(false);
                }
            }
        }
        clearFields();
        populateTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtOccupancyForActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOccupancyForActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOccupancyForActionPerformed

    private void txtFromDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFromDateKeyReleased
        // TODO add your handling code here:
        String enteredText = txtFromDate.getText();
        if (enteredText.matches("^(1[0-2]|0[1-9])/(3[01]|[12][0-9]|0[1-9])/[0-9]{4}$")) {
            lblFromDateCheck.setVisible(true);
            lblFromDateCheck.setForeground(Color.orange);
            lblFromDateCheck.setText("Valid Entry");
        } else {
            lblFromDateCheck.setVisible(true);
            lblFromDateCheck.setForeground(Color.orange);
            lblFromDateCheck.setText("Date format:dd-MM-yyyy");
        }
    }//GEN-LAST:event_txtFromDateKeyReleased

    private void txtToDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtToDateKeyReleased
        // TODO add your handling code here:
        String enteredText = txtToDate.getText();
        if (enteredText.matches("^(1[0-2]|0[1-9])/(3[01]|[12][0-9]|0[1-9])/[0-9]{4}$")) {
            lblToDateCheck.setVisible(true);
            lblToDateCheck.setForeground(Color.orange);
            lblToDateCheck.setText("Valid Entry");
        } else {
            
            lblToDateCheck.setVisible(true);
            lblToDateCheck.setForeground(Color.orange);
            lblToDateCheck.setText("Date format:dd-MM-yyyy");
        }
    }//GEN-LAST:event_txtToDateKeyReleased

    private void txtPricePerDayKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPricePerDayKeyReleased
        // TODO add your handling code here:
        String enteredText = txtPricePerDay.getText();
        if (enteredText.matches("^[0-9]+$")) {
            lblPricePerDayCheck.setVisible(true);
            lblPricePerDayCheck.setForeground(Color.orange);
            lblPricePerDayCheck.setText("Valid Entry");
        } else {
            lblPricePerDayCheck.setVisible(true);
            lblPricePerDayCheck.setForeground(Color.orange);
            lblPricePerDayCheck.setText("Enter numbers only");
        }
    }//GEN-LAST:event_txtPricePerDayKeyReleased

    private void txtOccupancyForKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOccupancyForKeyReleased
        // TODO add your handling code here:
        String enteredText = txtOccupancyFor.getText();
        if (enteredText.matches("^[0-9]+$")) {
            lblOccupancyCheck.setVisible(true);
            lblOccupancyCheck.setForeground(Color.orange);
            lblOccupancyCheck.setText("Valid Entry");
        } else {
            lblOccupancyCheck.setVisible(true);
            lblOccupancyCheck.setForeground(Color.orange);
            lblOccupancyCheck.setText("Enter numbers only");
        }
    }//GEN-LAST:event_txtOccupancyForKeyReleased

    private void txtDistanceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDistanceKeyReleased
        // TODO add your handling code here:
        String enteredText = txtDistance.getText();
        if (enteredText.matches("^[0-9]+.[0-9]+$")) {
            lblDistanceCheck.setVisible(true);
            lblDistanceCheck.setForeground(Color.orange);
            lblDistanceCheck.setText("Valid Entry");
        } else {
            lblDistanceCheck.setVisible(true);
            lblDistanceCheck.setForeground(Color.orange);
            lblDistanceCheck.setText("Valid format: 7.0");
        }
    }//GEN-LAST:event_txtDistanceKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPanePermanentAccomodationList;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnPost;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboBoxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblDistanceCheck;
    private javax.swing.JLabel lblFromDateCheck;
    private javax.swing.JLabel lblHostName;
    private javax.swing.JLabel lblOccupancyCheck;
    private javax.swing.JLabel lblPricePerDayCheck;
    private javax.swing.JLabel lblToDateCheck;
    private javax.swing.JTable tblAccomodation;
    private javax.swing.JTextArea txtAreaAddress;
    private javax.swing.JTextArea txtAreaFacilities;
    private javax.swing.JTextArea txtAreaRequests;
    private javax.swing.JTextField txtDistance;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtOccupancyFor;
    private javax.swing.JTextField txtPricePerDay;
    private javax.swing.JTextField txtToDate;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel model = (DefaultTableModel) tblAccomodation.getModel();
        model.setRowCount(0);
        Map<String, ArrayList<Temporary>> directory = temporaryDirectory.getTemporaryDirectory();
        ArrayList<Temporary> foundDirectory = new ArrayList<Temporary>();
        try {
            foundDirectory = directory.get("randad.p@northeastern.edu");
            for (Temporary t : foundDirectory) {
                Object[] row = new Object[4];

                row[0] = t;
                row[1] = t.getFromDate();
                row[2] = t.getToDate();
                row[3] = t.getHostName();
                model.addRow(row);
            }
        } catch (Exception e) {

        }

    }

    private void clearFields() {
        lblHostName.setText("from student");
        lblContact.setText("from student");
        txtFromDate.setText("");
        txtToDate.setText("");
        txtAreaAddress.setText("");
        txtAreaRequests.setText("");
        txtAreaFacilities.setText("");
        txtPricePerDay.setText("");
        txtOccupancyFor.setText("");
        txtDistance.setText("");

    }

}
