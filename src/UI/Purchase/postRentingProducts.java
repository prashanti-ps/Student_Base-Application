/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Purchase;

import UI.Student.StudentDashboard;
import business.EcoSystem;
import business.Purchase.Purchase;
import business.Purchase.PurchaseDirectory;
import business.Rent.RentProduct;
import business.Rent.RentProductDirectory;
import business.student.registration.StudentDirectory;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mayurimore
 */
public class postRentingProducts extends javax.swing.JPanel {

    /**
     * Creates new form postRentingProducts
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAccount;
    RentProductDirectory rentProductDirectory;
    StudentDirectory studentDirectory;
    RentProduct p = new RentProduct();
    public postRentingProducts(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecosystem) {
        initComponents();
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        this.studentDirectory = ecosystem.getStudentDirectory();
        this.userProcessContainer = userProcessContainer;
        this.rentProductDirectory = ecosystem.getRentProductDirectory();
        
        populateTable();
        clearFields();
        enableFields(false);
        btnPost.setEnabled(false);
        btnUpdate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaAddress = new javax.swing.JTextArea();
        txtProductName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtContactEmail = new javax.swing.JTextField();
        btnPost = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblPriceCheck = new javax.swing.JLabel();
        comboCategory = new javax.swing.JComboBox<>();
        comboCondition = new javax.swing.JComboBox<>();
        lblQuantityCheck = new javax.swing.JLabel();
        Edit = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lblUploadImage = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaRequests = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        txtAvailibilityPeriod = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        lblPeriodCheck = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductList = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(29, 31, 40));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Product Name :");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Price :");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("category :");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Quantity :");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Condition :");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contact Email :");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Address");

        txtAreaAddress.setColumns(20);
        txtAreaAddress.setRows(5);
        jScrollPane3.setViewportView(txtAreaAddress);

        txtProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductNameActionPerformed(evt);
            }
        });

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceKeyReleased(evt);
            }
        });

        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantityKeyReleased(evt);
            }
        });

        txtContactEmail.setEditable(false);

        btnPost.setBackground(new java.awt.Color(251, 129, 34));
        btnPost.setForeground(new java.awt.Color(255, 255, 255));
        btnPost.setText("Post product");
        btnPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(251, 129, 34));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblPriceCheck.setForeground(new java.awt.Color(204, 204, 204));
        lblPriceCheck.setText("PriceCheck");

        comboCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Electronics", "Furniture", "Home Decor", "Mattresses" }));

        comboCondition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New", "upto 3 months old", "upto 6 months old", "older than 6 months" }));

        lblQuantityCheck.setForeground(new java.awt.Color(204, 204, 204));
        lblQuantityCheck.setText("Quantity Check");

        Edit.setBackground(new java.awt.Color(251, 129, 34));
        Edit.setForeground(new java.awt.Color(255, 255, 255));
        Edit.setText("edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Upload Image");

        lblUploadImage.setText("upload Image");

        btnUploadImage.setBackground(new java.awt.Color(251, 129, 34));
        btnUploadImage.setForeground(new java.awt.Color(255, 255, 255));
        btnUploadImage.setText("Choose Image");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Status");

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Taken" }));

        btnAdd.setBackground(new java.awt.Color(251, 129, 34));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add Product");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(251, 129, 34));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Buy Requests");

        txtAreaRequests.setColumns(20);
        txtAreaRequests.setRows(5);
        jScrollPane4.setViewportView(txtAreaRequests);

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Availible For");

        txtAvailibilityPeriod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAvailibilityPeriodKeyReleased(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Months");

        lblPeriodCheck.setText("Period Check");

        tblProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Product Name", "Address", "price", "Quantity", "Condition", "Category", "Available For", "Availibility", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblProductList);

        jLabel9.setBackground(new java.awt.Color(29, 34, 40));
        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Post Products for Rent");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(btnBack)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel14))
                                        .addGap(90, 90, 90)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtProductName)
                                            .addComponent(txtPrice)
                                            .addComponent(txtQuantity)
                                            .addComponent(txtContactEmail)
                                            .addComponent(comboCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboCondition, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtAvailibilityPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel15)))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPriceCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblQuantityCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnAdd)
                                        .addGap(63, 63, 63)
                                        .addComponent(btnPost)
                                        .addGap(52, 52, 52)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(lblUploadImage)))
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(lblPeriodCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUploadImage)
                            .addComponent(lblUploadImage))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPriceCheck)
                                .addComponent(jLabel11)))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(24, 24, 24)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(comboCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txtContactEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel13)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel14)
                                            .addComponent(txtAvailibilityPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15)))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblQuantityCheck)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnPost)
                    .addComponent(btnUpdate)
                    .addComponent(Edit))
                .addGap(351, 351, 351)
                .addComponent(lblPeriodCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void txtAvailibilityPeriodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAvailibilityPeriodKeyReleased
        // TODO add your handling code here:

        String enteredText = txtAvailibilityPeriod.getText();
        if (enteredText.matches("^[0-9]+$")) {
            lblPeriodCheck.setVisible(true);
            lblPeriodCheck.setForeground(Color.WHITE);
            lblPeriodCheck.setText("Valid Entry");
        } else {
            lblPeriodCheck.setVisible(true);
            lblPeriodCheck.setForeground(Color.orange);
            lblPeriodCheck.setText("Enter numbers only");
        }
    }//GEN-LAST:event_txtAvailibilityPeriodKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        StudentDashboard studentDashboardPanel = new StudentDashboard(userProcessContainer, userAccount, ecosystem);
        userProcessContainer.add("studentDashboardPanel", studentDashboardPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        clearFields();
        enableFields(true);
        btnUpdate.setEnabled(false);
        btnPost.setEnabled(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        // TODO add your handling code here:

        JFileChooser filechooser = new JFileChooser();
        filechooser.setDialogTitle("Choose Your File");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("4 extentions supported", "jpg", "png", "jpeg", "gif");
        int selected =  filechooser.showOpenDialog(this);
        if(selected==JFileChooser.APPROVE_OPTION){
            File file = filechooser.getSelectedFile();
            String getSelectedImage = file.getAbsolutePath();
            JOptionPane.showConfirmDialog(null, getSelectedImage);
            ImageIcon imIcon = new ImageIcon(getSelectedImage);
            Image image = imIcon.getImage(); // transform it
            Image newimg = image.getScaledInstance(20, 20,  java.awt.Image.SCALE_SMOOTH);
            ImageIcon imICon2 = new ImageIcon(newimg);
            lblUploadImage.setIcon(imICon2);

            p.setProductImage(getSelectedImage);
            System.out.print("path in sell is " + p.getProductImage());

            /*

            //upload file in folder

            String newPath = "/Users/mayurimore/NetBeansProjects/Final_Project/Images/";

            File directory = new File(newPath);
            if(!directory.exists()){
                directory.mkdirs();
            }

            File sourceFile = null;
            File destinationFile = null;
            String extension = getSelectedImage.substring(getSelectedImage.lastIndexOf('.' + 1));
            sourceFile = new File(getSelectedImage);
            destinationFile = new File(newPath  + extension);

            try {
                Files.copy(sourceFile.toPath(), destinationFile.toPath());
            } catch (IOException ex) {
                Logger.getLogger(postSellingProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
            //  System.out.println(sourceFile.toPath());
            //  System.out.println(destinationFile.toPath());

            */
        }
    }//GEN-LAST:event_btnUploadImageActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblProductList.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to edit!");
            return;
        } else {
            enableFields(true);
            btnUpdate.setEnabled(true);
            btnPost.setEnabled(false);
            DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
            RentProduct p = (RentProduct) model.getValueAt(selectedRowIndex, 0);
            txtProductName.setText(p.getProductName());
            txtContactEmail.setText(userAccount.getStudent().getEmailAddress());
            txtPrice.setText(String.valueOf(p.getPrice()));
            txtAreaAddress.setText(p.getAddress());
            txtQuantity.setText(String.valueOf(p.getQuantity()));
           // txtComment.setText(p.getComment());

            comboCategory.setSelectedItem(p.getCategory().toString());
            comboCondition.setSelectedItem(p.getContidion().toString());
            comboStatus.setSelectedItem(p.getStatusOfProduct().toString());
            txtAreaRequests.setText(p.getBuyRequests());
            txtAvailibilityPeriod.setText(String.valueOf(p.getAvailibilityPeriod()));
            
            ImageIcon imIcon = new ImageIcon(p.getProductImage());
    Image image = imIcon.getImage(); // transform it 
Image newimg = image.getScaledInstance(20, 20,  java.awt.Image.SCALE_SMOOTH);
ImageIcon imICon2 = new ImageIcon(newimg);
    lblUploadImage.setIcon(imICon2);
        }
    }//GEN-LAST:event_EditActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblProductList.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update!");
            return;
        } else if (validityCheck()) {
            //fieldsEnableDisable(true);
            DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
            RentProduct p = (RentProduct) model.getValueAt(selectedRowIndex, 0);
            Map<String, ArrayList<RentProduct>> latestDirectory = rentProductDirectory.getRentProductDirectory();
            ArrayList<RentProduct> perArr = latestDirectory.get(p.getContact());
            for (RentProduct obj : perArr) {
                if (obj.equals(p)) {
                    obj.setProductName(txtProductName.getText());
                    obj.setPrice(Integer.parseInt(txtPrice.getText()));
                    obj.setAddress(txtAreaAddress.getText());
                    //obj.setQuantity(Integer.parseInt(txtQuantity.getText()));
                    obj.setContidion(comboCondition.getSelectedItem().toString());
                   // obj.setComment(txtComment.getText());

                    obj.setCategory(comboCategory.getSelectedItem().toString());
                    obj.setStatusOfProduct(comboStatus.getSelectedItem().toString());
                    obj.setAvailibilityPeriod(Integer.parseInt(txtAvailibilityPeriod.getText()));
                    JOptionPane.showMessageDialog(this, "Record Updated!");
                    // enableFields(false);
                    lblPriceCheck.setEnabled(false);
                    lblQuantityCheck.setEnabled(false);

                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "All fields must be filled and valid!");
        }
        btnUpdate.setEnabled(false);
        clearFields();
        populateTable();
        enableFields(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostActionPerformed
        // TODO add your handling code here:
        RentProduct p1 = new RentProduct();
        
        if (validityCheck()){

            String email = userAccount.getStudent().getEmailAddress();
            p1.setProductImage(p.getProductImage());

            p1.setProductName(txtProductName.getText());
            p1.setCategory(comboCategory.getSelectedItem().toString());
            p1.setQuantity(Integer.parseInt(txtQuantity.getText()));
            p1.setPrice(Integer.parseInt(txtPrice.getText()));
           // p.setComment(txtComment.getText());
            p1.setAddress(txtAreaAddress.getText());
            // p.setContactEmail(email);
            p1.setContact(email);
            p1.setContidion(comboCondition.getSelectedItem().toString());
            p1.setStatus("OK");
            p1.setStatusOfProduct(comboStatus.getSelectedItem().toString());
            p1.setBuyRequests("");
            p1.setAvailibilityPeriod(Integer.parseInt(txtAvailibilityPeriod.getText()));

            ecosystem.getRentProductDirectory().addNewRentProduct(email, p1);

            // p.setProductImage(productImage);
            JOptionPane.showMessageDialog(this, "Product Posted!");
            clearFields();
            populateTable();

            btnPost.setEnabled(false);
            enableFields(false);
        }
    }//GEN-LAST:event_btnPostActionPerformed

    private void txtQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyReleased
        // TODO add your handling code here:
        String enteredText = txtPrice.getText();
        if (enteredText.matches("^[0-9]+$")) {
            lblQuantityCheck.setVisible(true);
            lblQuantityCheck.setForeground(Color.WHITE);
            lblQuantityCheck.setText("Valid Entry");
        } else {
            lblQuantityCheck.setVisible(true);
            lblQuantityCheck.setForeground(Color.orange);
            lblQuantityCheck.setText("Enter numbers only");
        }
    }//GEN-LAST:event_txtQuantityKeyReleased

    private void txtPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyReleased
        // TODO add your handling code here:

        String enteredText = txtPrice.getText();
        if (enteredText.matches("^[0-9]+$")) {
            lblPriceCheck.setVisible(true);
            lblPriceCheck.setForeground(Color.WHITE);
            lblPriceCheck.setText("Valid Entry");
        } else {
            lblPriceCheck.setVisible(true);
            lblPriceCheck.setForeground(Color.orange);
            lblPriceCheck.setText("Enter numbers only");
        }
    }//GEN-LAST:event_txtPriceKeyReleased

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Edit;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPost;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JComboBox<String> comboCategory;
    private javax.swing.JComboBox<String> comboCondition;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblPeriodCheck;
    private javax.swing.JLabel lblPriceCheck;
    private javax.swing.JLabel lblQuantityCheck;
    private javax.swing.JLabel lblUploadImage;
    private javax.swing.JTable tblProductList;
    private javax.swing.JTextArea txtAreaAddress;
    private javax.swing.JTextArea txtAreaRequests;
    private javax.swing.JTextField txtAvailibilityPeriod;
    private javax.swing.JTextField txtContactEmail;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

private void clearFields() {
        txtContactEmail.setText(userAccount.getStudent().getEmailAddress());
        txtAreaAddress.setText("");
        
//        txtComment.setText("");
        
       // txtContactEmail.setText("");
        txtPrice.setText("");
        txtProductName.setText("");
        txtQuantity.setText("");
        lblUploadImage.setIcon(null) ;
        txtAvailibilityPeriod.setText("");
      
    }

 private void populateTable() {
        //To change body of generated methods, choose Tools |    Templates .
        //sync
        DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
        model.setRowCount(0);
        Map<String, ArrayList<RentProduct>> directory = rentProductDirectory.getRentProductDirectory();
        ArrayList<RentProduct> foundDirectory = new ArrayList<RentProduct>();
        try {
            //System.out.print(userAccount.getStudent().getEmailAddress());
            foundDirectory = directory.get(userAccount.getStudent().getEmailAddress());
            for (RentProduct p : foundDirectory) {
                Object[] row = new Object[9];

                row[0] = p;
                row[1] = p.getAddress();
                row[2] = p.getPrice();
                row[3] = p.getQuantity();
                row[4] = p.getContidion();
                row[5] = p.getCategory();
                row[6] = p.getAvailibilityPeriod() + " Months";
                row[7] = p.getStatusOfProduct();
                row[8] = p.getStatus();
                model.addRow(row);
        }
        }
        catch (Exception e) {
            e.printStackTrace();

        }
 } 
 
 private void enableFields(boolean b) {
        txtProductName.setEnabled(b);
        txtPrice.setEnabled(b);
        txtContactEmail.setEnabled(b);
        txtAreaAddress.setEnabled(b);
        
//        txtComment.setEnabled(b);
        txtQuantity.setEnabled(b);
        comboCondition.setEnabled(b);
        comboCategory.setEnabled(b);
        btnUploadImage.setEnabled(b);
        txtAvailibilityPeriod.setEnabled(b);
        comboStatus.setEnabled(b);

    }
 private boolean validityCheck() {

        if (lblPriceCheck.getForeground() == Color.WHITE && lblQuantityCheck.getForeground() == Color.WHITE) {
            return true;
        } else {
            return false;
        }
    }
}
