/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Purchase;

import business.EcoSystem;
import business.Purchase.Purchase;
import business.Purchase.PurchaseDirectory;
import business.student.accomodation.Permanent;
import business.student.registration.Student;
import business.student.registration.StudentDirectory;
import business.useraccount.UserAccount;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mayurimore
 */
public class postSellingProduct extends javax.swing.JPanel {

    /**
     * Creates new form postSellingProduct
     */
    PurchaseDirectory purchaseDirectory = new PurchaseDirectory();
    JPanel userProcessContainer;
    StudentDirectory studentDirectory;
    UserAccount userAccount;
    EcoSystem ecosystem;
    
    public postSellingProduct(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecosystem) {
        initComponents();
        
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        this.purchaseDirectory = ecosystem.getPurchaseDirectory();
        this.studentDirectory = ecosystem.getStudentDirectory();
        
        txtContactEmail.setText(userAccount.getStudent().getEmailAddress());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductList = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaAddress = new javax.swing.JTextArea();
        txtProductName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtContactEmail = new javax.swing.JTextField();
        btnPost = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtComment = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblPriceCheck = new javax.swing.JLabel();
        comboCategory = new javax.swing.JComboBox<>();
        comboCondition = new javax.swing.JComboBox<>();
        lblQuantityCheck = new javax.swing.JLabel();
        Edit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        lblUploadImage = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox<>();

        setLayout(new java.awt.CardLayout());

        tblProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Product Name", "Address", "price", "Quantity", "Condition", "Category", "Comment", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblProductList);

        jLabel1.setText("Product Name :");

        jLabel2.setText("Price :");

        jLabel3.setText("category :");

        jLabel4.setText("Quantity :");

        jLabel5.setText("Condition :");

        jLabel6.setText("Contact Email :");

        jLabel7.setText("Address");

        txtAreaAddress.setColumns(20);
        txtAreaAddress.setRows(5);
        jScrollPane2.setViewportView(txtAreaAddress);

        txtProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductNameActionPerformed(evt);
            }
        });

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceKeyReleased(evt);
            }
        });

        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantityKeyReleased(evt);
            }
        });

        txtContactEmail.setEditable(false);

        btnPost.setText("Post");
        btnPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Post Products for sale");

        jLabel9.setText("Comment :");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblPriceCheck.setForeground(new java.awt.Color(204, 204, 204));
        lblPriceCheck.setText("PriceCheck");

        comboCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Electronics", "Furniture", "Home Decor", "Mattresses" }));

        comboCondition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New", "upto 3 months old", "upto 6 months old", "older than 6 months" }));

        lblQuantityCheck.setForeground(new java.awt.Color(204, 204, 204));
        lblQuantityCheck.setText("Quantity Check");

        Edit.setText("edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        jLabel10.setText("Upload Image");

        lblUploadImage.setText("upload Image");

        btnUploadImage.setText("Choose Image");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        jLabel11.setText("Status");

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Taken" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(90, 90, 90)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtProductName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContactEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtComment, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboCategory, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboCondition, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblUploadImage)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblPriceCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(lblQuantityCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))))
                .addGap(138, 138, 138))
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(btnPost)
                        .addGap(26, 26, 26)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(Edit))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel8)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPriceCheck)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuantityCheck))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(comboCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(txtContactEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUploadImage)
                    .addComponent(lblUploadImage)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPost)
                    .addComponent(btnUpdate)
                    .addComponent(Edit))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void txtProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductNameActionPerformed

    private void btnPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostActionPerformed
        // TODO add your handling code here:
        
        Purchase p = new Purchase();
        String email = userAccount.getStudent().getEmailAddress();
        p.setProductName(txtProductName.getText());
        p.setCategory(comboCategory.getItemAt(0));
        p.setQuantity(Integer.parseInt(txtQuantity.getText()));
        p.setPrice(Integer.parseInt(txtPrice.getText()));
        p.setComment(txtComment.getText());
        p.setAddress(txtAreaAddress.getText());
        p.setContactEmail(email);
        p.setContidion(comboCondition.getItemAt(0));
        p.setStatus("OK");
        p.setStatusOfProduct(comboStatus.getItemAt(0));
        
        
        
    
        
        
       
        
        ecosystem.getPurchaseDirectory().addNewPurchaseProduct(email, p);
         //purchaseDirectory.addNewPurchaseProduct(email, p);
       // p.setProductImage(productImage);
       JOptionPane.showMessageDialog(this, "Product Posted!");
        
        populateTable();
        btnPost.setEnabled(false);
        clearFields();
    }//GEN-LAST:event_btnPostActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblProductList.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update!");
            return;
        } else if (validityCheck()) {
            //fieldsEnableDisable(true);
            DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
            Purchase p = (Purchase) model.getValueAt(selectedRowIndex, 0);
            Map<String, ArrayList<Purchase>> latestDirectory = purchaseDirectory.getPurchaseDirectory();
            ArrayList<Purchase> perArr = latestDirectory.get(p.getContactEmail());
            for (Purchase obj : perArr) {
                if (obj.equals(p)) {
                    obj.setProductName(txtProductName.getText());
                    obj.setPrice(Integer.parseInt(txtPrice.getText()));
                    obj.setAddress(txtAreaAddress.getText());
                    //obj.setQuantity(Integer.parseInt(txtQuantity.getText()));
                    obj.setContidion(comboCondition.getItemAt(0));
                    obj.setComment(txtComment.getText());
                    
                    obj.setCategory(comboCategory.getItemAt(0));
                    obj.setStatus(comboStatus.getItemAt(0));
                    JOptionPane.showMessageDialog(this, "Record Updated!");
                   // enableFields(false);
                    lblPriceCheck.setEnabled(false);
                    lblQuantityCheck.setEnabled(false);
                    
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "All fields must be filled and valid!");
        }
        btnUpdate.setEnabled(false);
        clearFields();
        populateTable();
        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyReleased
        // TODO add your handling code here:
        
        String enteredText = txtPrice.getText();
        if (enteredText.matches("^[0-9]+$")) {
            lblPriceCheck.setVisible(true);
            lblPriceCheck.setForeground(Color.WHITE);
            lblPriceCheck.setText("Valid Entry");
        } else {
            lblPriceCheck.setVisible(true);
            lblPriceCheck.setForeground(Color.orange);
            lblPriceCheck.setText("Enter numbers only");
        }
    }//GEN-LAST:event_txtPriceKeyReleased

    private void txtQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyReleased
        // TODO add your handling code here:
        String enteredText = txtPrice.getText();
        if (enteredText.matches("^[0-9]+$")) {
            lblQuantityCheck.setVisible(true);
            lblQuantityCheck.setForeground(Color.WHITE);
            lblQuantityCheck.setText("Valid Entry");
        } else {
            lblQuantityCheck.setVisible(true);
            lblQuantityCheck.setForeground(Color.orange);
            lblQuantityCheck.setText("Enter numbers only");
        }
    }//GEN-LAST:event_txtQuantityKeyReleased

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblProductList.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to edit!");
            return;
        } else {
            enableFields(true);
            btnUpdate.setEnabled(true);
            btnPost.setEnabled(false);
            DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
            Purchase p = (Purchase) model.getValueAt(selectedRowIndex, 0);
            txtProductName.setText(p.getProductName());
            txtContactEmail.setText(userAccount.getStudent().getEmailAddress());
            txtPrice.setText(String.valueOf(p.getPrice()));
            txtAreaAddress.setText(p.getAddress());
            txtQuantity.setText(String.valueOf(p.getQuantity()));
            txtComment.setText(p.getComment());
            
          //  comboCategory.addItem(p.getCategory().toString());
            comboCondition.addItem(p.getContidion().toString());
        }
    }//GEN-LAST:event_EditActionPerformed

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        // TODO add your handling code here:
        
        JFileChooser filechooser = new JFileChooser();
    filechooser.setDialogTitle("Choose Your File");
    FileNameExtensionFilter filter = new FileNameExtensionFilter("4 extentions supported", "jpg", "png", "jpeg", "gif");
    int selected =  filechooser.showOpenDialog(this);
    if(selected==JFileChooser.APPROVE_OPTION){
    File file = filechooser.getSelectedFile();
    String getSelectedImage = file.getAbsolutePath();
    JOptionPane.showConfirmDialog(null, getSelectedImage);
    ImageIcon imIcon = new ImageIcon(getSelectedImage);
    Image image = imIcon.getImage(); // transform it 
Image newimg = image.getScaledInstance(20, 20,  java.awt.Image.SCALE_SMOOTH);
ImageIcon imICon2 = new ImageIcon(newimg);
    lblUploadImage.setIcon(imICon2);
    
    Purchase p = new Purchase();
    
    //upload file in folder
    
    String newPath = "/Users/mayurimore/NetBeansProjects/Final_Project/Images/";
    
             
    File directory = new File(newPath);
    if(!directory.exists()){
    directory.mkdirs();
    }
    
    File sourceFile = null;
    File destinationFile = null;
    String extension = getSelectedImage.substring(getSelectedImage.lastIndexOf('.' + 1));
    sourceFile = new File(getSelectedImage);
    destinationFile = new File(newPath  + extension);
    
            try {
                Files.copy(sourceFile.toPath(), destinationFile.toPath());
            } catch (IOException ex) {
                Logger.getLogger(postSellingProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
          //  System.out.println(sourceFile.toPath());
          //  System.out.println(destinationFile.toPath());
            
            
    
    
    }
    }//GEN-LAST:event_btnUploadImageActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Edit;
    private javax.swing.JButton btnPost;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JComboBox<String> comboCategory;
    private javax.swing.JComboBox<String> comboCondition;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPriceCheck;
    private javax.swing.JLabel lblQuantityCheck;
    private javax.swing.JLabel lblUploadImage;
    private javax.swing.JTable tblProductList;
    private javax.swing.JTextArea txtAreaAddress;
    private javax.swing.JTextField txtComment;
    private javax.swing.JTextField txtContactEmail;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        txtAreaAddress.setText("");
        
        txtComment.setText("");
        
        txtContactEmail.setText("");
        txtPrice.setText("");
        txtProductName.setText("");
        txtQuantity.setText("");
      
    }

    private void populateTable() {
        //To change body of generated methods, choose Tools |    Templates .
        //sync
        DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
        model.setRowCount(0);
        Map<String, ArrayList<Purchase>> directory = purchaseDirectory.getPurchaseDirectory();
        ArrayList<Purchase> foundDirectory = new ArrayList<Purchase>();
        try {
            System.out.print(userAccount.getStudent().getEmailAddress());
            foundDirectory = directory.get(userAccount.getStudent().getEmailAddress());
            for (Purchase p : foundDirectory) {
                Object[] row = new Object[8];

                row[0] = p;
                row[1] = p.getAddress();
                row[2] = p.getPrice();
                row[3] = p.getQuantity();
                row[4] = p.getContidion();
                row[5] = p.getCategory();
                row[6] = p.getComment();
                row[7] = p.getStatusOfProduct();
                model.addRow(row);
        }
        }
        catch (Exception e) {
            e.printStackTrace();

        }
        
        
        

    }
    
    private boolean validityCheck() {

        if (lblPriceCheck.getForeground() == Color.WHITE && lblQuantityCheck.getForeground() == Color.WHITE) {
            return true;
        } else {
            return false;
        }
    }
    
    private void enableFields(boolean b) {
        txtProductName.setEnabled(b);
        txtPrice.setEnabled(b);
        txtContactEmail.setEnabled(b);
        txtAreaAddress.setEnabled(b);
        
        txtComment.setEnabled(b);
        txtQuantity.setEnabled(b);
        comboCondition.setEnabled(b);
        comboCategory.setEnabled(b);

    }
    
}
