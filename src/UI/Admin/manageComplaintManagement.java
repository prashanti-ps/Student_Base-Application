/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Admin;

import business.EcoSystem;
import business.Purchase.Purchase;
import business.Purchase.PurchaseDirectory;
import business.Rent.RentProduct;
import business.Rent.RentProductDirectory;
import business.student.accomodation.Permanent;
import business.student.accomodation.PermanentDirectory;
import business.student.accomodation.Temporary;
import business.student.accomodation.TemporaryDirectory;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prashantii_s
 */
public class manageComplaintManagement extends javax.swing.JPanel {

    /**
     * Creates new form manageComplaintManagement
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAccount;
    TemporaryDirectory temporaryDirectory;
    PermanentDirectory permanentDirectory;
     PurchaseDirectory purchaseDirectory;
      RentProductDirectory rentProductDirectory;
      
       RentProduct ren;
    Temporary temp;
    Permanent per;
    Purchase pur;

    public manageComplaintManagement(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecosystem) {
       
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAccount = userAccount;
        this.temporaryDirectory = ecosystem.getTemporaryDirectory();
        this.permanentDirectory = ecosystem.getPermanentDirectory();
         this.purchaseDirectory = ecosystem.getPurchaseDirectory();
          this.rentProductDirectory=ecosystem.getRentProductDirectory();
          initComponents();
        populateComplaintsTable();
        initPurchaseListerners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        adminComplaintManagementTab = new javax.swing.JTabbedPane();
        buyingComplaintsJPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblComplaintsPurchase = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JLabel();
        txtProductCategory = new javax.swing.JLabel();
        txtProductCondition = new javax.swing.JLabel();
        txtProductQuantity = new javax.swing.JLabel();
        txtProductAddress = new javax.swing.JLabel();
        lblProductImage = new javax.swing.JLabel();
        btnDeletePurchase = new javax.swing.JButton();
        TemporaryAccomodationPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdminComplaintTemp = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAdminComplaintTempDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblTempAddress = new javax.swing.JLabel();
        lblTempFacilities = new javax.swing.JLabel();
        lblTempPrice = new javax.swing.JLabel();
        lblTempContact = new javax.swing.JLabel();
        lblTempDistance = new javax.swing.JLabel();
        lblTempOccupancy = new javax.swing.JLabel();
        PermanentAccomodationPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAdminComplaintPer = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btnAdminComplaintPermDelete = new javax.swing.JButton();
        lblPermAddress = new javax.swing.JLabel();
        lblPermFacilities = new javax.swing.JLabel();
        lblPermRent = new javax.swing.JLabel();
        lblPermContact = new javax.swing.JLabel();
        lblPermTotalPpl = new javax.swing.JLabel();
        RentalPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRentComplaints = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtRentProductName = new javax.swing.JLabel();
        txtRentCategory = new javax.swing.JLabel();
        txtRentCondition = new javax.swing.JLabel();
        txtRentPeriod = new javax.swing.JLabel();
        txtRentAddress = new javax.swing.JLabel();
        txtRentImage = new javax.swing.JLabel();
        btnRentDelete = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        btnBackComplaintManagementAdmin = new javax.swing.JButton();

        setBackground(new java.awt.Color(29, 34, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Delete Requests From Complaint Manager");

        adminComplaintManagementTab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                adminComplaintManagementTabStateChanged(evt);
            }
        });

        buyingComplaintsJPanel.setBackground(new java.awt.Color(29, 34, 40));

        tblComplaintsPurchase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Complaint Against ", "Status", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblComplaintsPurchase);

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Product:");

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Category:");

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Condition:");

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Quantity:");

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Address:");

        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Product Image:");

        txtProductName.setForeground(new java.awt.Color(255, 255, 255));

        txtProductCategory.setForeground(new java.awt.Color(255, 255, 255));

        txtProductCondition.setForeground(new java.awt.Color(255, 255, 255));

        txtProductQuantity.setForeground(new java.awt.Color(255, 255, 255));

        txtProductAddress.setForeground(new java.awt.Color(255, 255, 255));

        btnDeletePurchase.setBackground(new java.awt.Color(251, 129, 34));
        btnDeletePurchase.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDeletePurchase.setForeground(new java.awt.Color(255, 255, 255));
        btnDeletePurchase.setText("Delete Post");
        btnDeletePurchase.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDeletePurchase.setBorderPainted(false);
        btnDeletePurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePurchaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buyingComplaintsJPanelLayout = new javax.swing.GroupLayout(buyingComplaintsJPanel);
        buyingComplaintsJPanel.setLayout(buyingComplaintsJPanelLayout);
        buyingComplaintsJPanelLayout.setHorizontalGroup(
            buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))
                                .addGap(63, 63, 63)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtProductCondition)
                                    .addComponent(txtProductCategory)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProductImage, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtProductAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                        .addComponent(txtProductQuantity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(btnDeletePurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(275, Short.MAX_VALUE))
        );

        buyingComplaintsJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtProductCategory, txtProductCondition, txtProductName});

        buyingComplaintsJPanelLayout.setVerticalGroup(
            buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, buyingComplaintsJPanelLayout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel20)
                                .addComponent(txtProductCategory))
                            .addGap(34, 34, 34)
                            .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel21)
                                .addComponent(txtProductCondition)))
                        .addComponent(jLabel24))
                    .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                        .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel22)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel23))
                            .addGroup(buyingComplaintsJPanelLayout.createSequentialGroup()
                                .addGroup(buyingComplaintsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProductQuantity))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(txtProductAddress)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(lblProductImage, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btnDeletePurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(214, Short.MAX_VALUE))
        );

        buyingComplaintsJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtProductAddress, txtProductCategory, txtProductCondition, txtProductName, txtProductQuantity});

        adminComplaintManagementTab.addTab("Purchase", buyingComplaintsJPanel);

        TemporaryAccomodationPanel.setBackground(new java.awt.Color(29, 34, 40));

        tblAdminComplaintTemp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Price Per Day", "Complaint Against", "Comments", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAdminComplaintTemp);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Address:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Facilities:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price Per Day:");

        btnAdminComplaintTempDelete.setBackground(new java.awt.Color(251, 129, 34));
        btnAdminComplaintTempDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdminComplaintTempDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnAdminComplaintTempDelete.setText("Delete Post");
        btnAdminComplaintTempDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAdminComplaintTempDelete.setBorderPainted(false);
        btnAdminComplaintTempDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminComplaintTempDeleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Contact:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Distance From University:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Occupancy For:");

        javax.swing.GroupLayout TemporaryAccomodationPanelLayout = new javax.swing.GroupLayout(TemporaryAccomodationPanel);
        TemporaryAccomodationPanel.setLayout(TemporaryAccomodationPanelLayout);
        TemporaryAccomodationPanelLayout.setHorizontalGroup(
            TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TemporaryAccomodationPanelLayout.createSequentialGroup()
                .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TemporaryAccomodationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(32, 32, 32)
                        .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTempAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(lblTempFacilities, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTempPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTempContact, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(lblTempDistance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTempOccupancy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(TemporaryAccomodationPanelLayout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(btnAdminComplaintTempDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TemporaryAccomodationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        TemporaryAccomodationPanelLayout.setVerticalGroup(
            TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TemporaryAccomodationPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TemporaryAccomodationPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel5))
                    .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(lblTempAddress)
                        .addComponent(lblTempContact)))
                .addGap(36, 36, 36)
                .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(lblTempFacilities)
                    .addComponent(lblTempDistance))
                .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TemporaryAccomodationPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(TemporaryAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lblTempPrice)
                            .addComponent(lblTempOccupancy, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(TemporaryAccomodationPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel7)))
                .addGap(51, 51, 51)
                .addComponent(btnAdminComplaintTempDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(453, Short.MAX_VALUE))
        );

        TemporaryAccomodationPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblTempAddress, lblTempContact, lblTempDistance, lblTempFacilities, lblTempOccupancy, lblTempPrice});

        adminComplaintManagementTab.addTab("Temporary Accomodation", TemporaryAccomodationPanel);

        PermanentAccomodationPanel.setBackground(new java.awt.Color(29, 34, 40));
        PermanentAccomodationPanel.setForeground(new java.awt.Color(255, 255, 255));

        tblAdminComplaintPer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Rent", "Complaint Against", "Comments", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblAdminComplaintPer);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Address:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Contact:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Facilities:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Total People in House:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Rent:");

        btnAdminComplaintPermDelete.setBackground(new java.awt.Color(251, 129, 34));
        btnAdminComplaintPermDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdminComplaintPermDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnAdminComplaintPermDelete.setText("Delete Post");
        btnAdminComplaintPermDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAdminComplaintPermDelete.setBorderPainted(false);
        btnAdminComplaintPermDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminComplaintPermDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PermanentAccomodationPanelLayout = new javax.swing.GroupLayout(PermanentAccomodationPanel);
        PermanentAccomodationPanel.setLayout(PermanentAccomodationPanelLayout);
        PermanentAccomodationPanelLayout.setHorizontalGroup(
            PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PermanentAccomodationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1033, Short.MAX_VALUE)
                    .addGroup(PermanentAccomodationPanelLayout.createSequentialGroup()
                        .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel16)
                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPermFacilities, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(lblPermAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPermRent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(36, 36, 36)
                        .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPermContact, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(lblPermTotalPpl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(PermanentAccomodationPanelLayout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(btnAdminComplaintPermDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PermanentAccomodationPanelLayout.setVerticalGroup(
            PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PermanentAccomodationPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(lblPermAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPermContact)
                    .addComponent(jLabel15))
                .addGap(25, 25, 25)
                .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PermanentAccomodationPanelLayout.createSequentialGroup()
                        .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(lblPermFacilities)
                            .addComponent(jLabel17))
                        .addGap(19, 19, 19)
                        .addGroup(PermanentAccomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(lblPermRent)))
                    .addComponent(lblPermTotalPpl))
                .addGap(53, 53, 53)
                .addComponent(btnAdminComplaintPermDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(453, Short.MAX_VALUE))
        );

        PermanentAccomodationPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdminComplaintPermDelete, lblPermAddress, lblPermContact, lblPermFacilities, lblPermRent, lblPermTotalPpl});

        adminComplaintManagementTab.addTab("Permanent Accomodation", PermanentAccomodationPanel);

        RentalPanel.setBackground(new java.awt.Color(29, 34, 40));

        tblRentComplaints.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Complaint Against", "Status", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblRentComplaints);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Product Name:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Category:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Condition:");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Availability Period:");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Address:");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Product Image:");

        txtRentProductName.setForeground(new java.awt.Color(255, 255, 255));

        txtRentCategory.setForeground(new java.awt.Color(255, 255, 255));

        txtRentCondition.setForeground(new java.awt.Color(255, 255, 255));

        txtRentPeriod.setForeground(new java.awt.Color(255, 255, 255));

        txtRentAddress.setForeground(new java.awt.Color(255, 255, 255));

        txtRentImage.setForeground(new java.awt.Color(255, 255, 255));

        btnRentDelete.setBackground(new java.awt.Color(251, 129, 34));
        btnRentDelete.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnRentDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnRentDelete.setText("Delete Post");
        btnRentDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnRentDelete.setBorderPainted(false);
        btnRentDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRentDeleteActionPerformed(evt);
            }
        });

        jLabel31.setBackground(new java.awt.Color(255, 255, 255));
        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Months");

        javax.swing.GroupLayout RentalPanelLayout = new javax.swing.GroupLayout(RentalPanel);
        RentalPanel.setLayout(RentalPanelLayout);
        RentalPanelLayout.setHorizontalGroup(
            RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RentalPanelLayout.createSequentialGroup()
                .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RentalPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(RentalPanelLayout.createSequentialGroup()
                                .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(RentalPanelLayout.createSequentialGroup()
                                        .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel26)
                                            .addComponent(jLabel27))
                                        .addGap(74, 74, 74)
                                        .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtRentCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtRentCondition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jLabel25)
                                    .addGroup(RentalPanelLayout.createSequentialGroup()
                                        .addGap(138, 138, 138)
                                        .addComponent(txtRentProductName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(2, 2, 2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel28))
                                .addGap(33, 33, 33)
                                .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(RentalPanelLayout.createSequentialGroup()
                                        .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtRentAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtRentPeriod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel31)
                                        .addGap(94, 94, 94))
                                    .addComponent(txtRentImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(RentalPanelLayout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(btnRentDelete)))
                .addGap(301, 301, 301))
        );
        RentalPanelLayout.setVerticalGroup(
            RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RentalPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RentalPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jLabel28)
                            .addComponent(txtRentProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRentPeriod)))
                    .addGroup(RentalPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel31)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel29)
                    .addComponent(txtRentCategory)
                    .addComponent(txtRentAddress))
                .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RentalPanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel30))
                    .addGroup(RentalPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRentImage, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(RentalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel27)
                                .addComponent(txtRentCondition)))))
                .addGap(13, 13, 13)
                .addComponent(btnRentDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
        );

        RentalPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtRentAddress, txtRentCategory, txtRentCondition, txtRentPeriod, txtRentProductName});

        adminComplaintManagementTab.addTab("Rental", RentalPanel);

        btnBackComplaintManagementAdmin.setBackground(new java.awt.Color(251, 129, 34));
        btnBackComplaintManagementAdmin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBackComplaintManagementAdmin.setForeground(new java.awt.Color(255, 255, 255));
        btnBackComplaintManagementAdmin.setText("Back");
        btnBackComplaintManagementAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnBackComplaintManagementAdmin.setBorderPainted(false);
        btnBackComplaintManagementAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackComplaintManagementAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminComplaintManagementTab))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnBackComplaintManagementAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(btnBackComplaintManagementAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adminComplaintManagementTab))
        );
    }// </editor-fold>//GEN-END:initComponents
private void populateComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) tblComplaintsPurchase.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<Purchase>> latestDirectory = purchaseDirectory.getPurchaseDirectory();
        for (String key : latestDirectory.keySet()) {
            for (Purchase value : latestDirectory.get(key)) {
                if (value.getStatus().equals("Delete")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getContact();
                    row[2] = value.getStatus();
                    row[3] = value.getComment();
                    model.addRow(row);
                }
            }
        }
    }
private void populateRentalComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) tblRentComplaints.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<RentProduct>> latestDirectory = rentProductDirectory.getRentProductDirectory();
        for (String key : latestDirectory.keySet()) {
            for (RentProduct value : latestDirectory.get(key)) {
                if (value.getStatus().equals("Delete")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getContact();
                    row[2] = value.getComment();
                    row[3] = value.getStatus();
                    model.addRow(row);
                }
            }
        }
    }
    private void adminComplaintManagementTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_adminComplaintManagementTabStateChanged
         if (adminComplaintManagementTab.getSelectedIndex() == 0) {
            populateComplaintsTable();
            initPurchaseListerners();
        }
        if (adminComplaintManagementTab.getSelectedIndex() == 1) {
            populateTemporaryAccomodtionComplaintsTable();
            initTempListerners();
        }
        if (adminComplaintManagementTab.getSelectedIndex() == 2) {
            populatePermanentAccomodtionComplaintsTable();
            initPermListerners();
        }
        if (adminComplaintManagementTab.getSelectedIndex() == 3) {
            populateRentalComplaintsTable();
            initRentListerners();
        }
    }//GEN-LAST:event_adminComplaintManagementTabStateChanged

    private void btnAdminComplaintTempDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminComplaintTempDeleteActionPerformed
        int selectedRow = tblAdminComplaintTemp.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to delete");
            return;
        } else {
            temp = (Temporary) tblAdminComplaintTemp.getValueAt(selectedRow, 0);
            temporaryDirectory.deleteObject(temp);
            JOptionPane.showMessageDialog(null, "Post Deleted!");
            populateTemporaryAccomodtionComplaintsTable();
            lblTempAddress.setText(null);
            lblTempContact.setText(null);
            lblTempDistance.setText(null);
            lblTempFacilities.setText(null);
            lblTempOccupancy.setText(null);
            lblTempPrice.setText(null);

        }
    }//GEN-LAST:event_btnAdminComplaintTempDeleteActionPerformed

    private void btnAdminComplaintPermDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminComplaintPermDeleteActionPerformed
        int selectedRow = tblAdminComplaintPer.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to delete");
            return;
        } else {
            per = (Permanent) tblAdminComplaintPer.getValueAt(selectedRow, 0);
            permanentDirectory.deleteObject(per);
            JOptionPane.showMessageDialog(null, "Post Deleted!");
            populatePermanentAccomodtionComplaintsTable();
            lblPermAddress.setText(null);
            lblPermContact.setText(null);
            lblPermFacilities.setText(null);
            lblPermRent.setText(null);
            lblPermTotalPpl.setText(null);
        }
    }//GEN-LAST:event_btnAdminComplaintPermDeleteActionPerformed

    private void btnBackComplaintManagementAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackComplaintManagementAdminActionPerformed
        adminDashboard adminDashboardPanel = new adminDashboard(userProcessContainer, userAccount, ecosystem);
        userProcessContainer.add("adminDashboardPanel", adminDashboardPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackComplaintManagementAdminActionPerformed

    private void btnDeletePurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePurchaseActionPerformed
        int selectedRow = tblComplaintsPurchase.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to delete");
            return;
        } else {
            pur = (Purchase) tblComplaintsPurchase.getValueAt(selectedRow, 0);
            purchaseDirectory.deleteObject(pur);
            JOptionPane.showMessageDialog(null, "Post Deleted!");
            populateComplaintsTable();
            txtProductAddress.setText(null);
            txtProductCategory.setText(null);
            txtProductCondition.setText(null);
            txtProductName.setText(null);
            txtProductQuantity.setText(null);
            lblProductImage.setIcon(null);

        }
    }//GEN-LAST:event_btnDeletePurchaseActionPerformed
    private void initRentListerners() {
        tblRentComplaints.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = tblRentComplaints.getSelectedRow();
                if (selectedRow >= 0) {
                    RentProduct rent = (RentProduct) tblRentComplaints.getValueAt(selectedRow, 0);
                    if (null != rent) {
                        txtRentAddress.setText(rent.getAddress());
                        txtRentCategory.setText(rent.getCategory());
                        txtRentCondition.setText(rent.getContidion());
                        txtRentPeriod.setText(String.valueOf(rent.getAvailibilityPeriod()));
                        txtRentProductName.setText(rent.getProductName());
                        ImageIcon photo = new ImageIcon(rent.getProductImage());
                        Image fitImage = photo.getImage();
                        Image fitSize = fitImage.getScaledInstance(220, 170, Image.SCALE_SMOOTH);
                        txtRentImage.setIcon(new ImageIcon(fitSize));

                    }

                }
            }
        });
    }
    private void btnRentDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRentDeleteActionPerformed
         int selectedRow = tblRentComplaints.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a post to delete");
            return;
        } else {
            ren = (RentProduct) tblRentComplaints.getValueAt(selectedRow, 0);
            rentProductDirectory.deleteObject(ren);
            JOptionPane.showMessageDialog(null, "Post Deleted!");
            populateRentalComplaintsTable();
            txtRentAddress.setText(null);
                txtRentCategory.setText(null);
                txtRentCondition.setText(null);
                txtRentPeriod.setText(null);
                txtRentProductName.setText(null);
                txtRentImage.setIcon(null);
              

        }
    }//GEN-LAST:event_btnRentDeleteActionPerformed
    private void populateTemporaryAccomodtionComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) tblAdminComplaintTemp.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<Temporary>> latestDirectory = temporaryDirectory.getTemporaryDirectory();
        for (String key : latestDirectory.keySet()) {
            for (Temporary value : latestDirectory.get(key)) {
                if (value.getStatusOfPost().equals("Delete")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getHostName();
                    row[2] = value.getComment();
                    row[3] = value.getStatusOfPost();
                    model.addRow(row);
                }
            }
        }
    }

    private void populatePermanentAccomodtionComplaintsTable() {
        DefaultTableModel model = (DefaultTableModel) tblAdminComplaintPer.getModel();
        model.setRowCount(0);
        String contact = "";
        Object[] row = new Object[4];
        Map<String, ArrayList<Permanent>> latestDirectory = permanentDirectory.getPermanentDirectory();
        for (String key : latestDirectory.keySet()) {
            for (Permanent value : latestDirectory.get(key)) {
                if (value.getStatusOfPost().equals("Delete")) {
                    contact = key;
                    row[0] = value;
                    row[1] = value.getHostName();
                    row[2] = value.getComment();
                    row[3] = value.getStatusOfPost();
                    model.addRow(row);
                }
            }
        }
    }

    private void initTempListerners() {
        tblAdminComplaintTemp.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = tblAdminComplaintTemp.getSelectedRow();
                if (selectedRow >= 0) {
                    Temporary temp = (Temporary) tblAdminComplaintTemp.getValueAt(selectedRow, 0);
                    if (null != temp) {
                        lblTempAddress.setText(temp.getAddress().trim());
                        lblTempContact.setText(temp.getContact().trim());
                        lblTempDistance.setText(String.valueOf(temp.getDistanceFromUniversity()));
                        lblTempFacilities.setText(temp.getFacilities().trim());
                        lblTempOccupancy.setText(String.valueOf(temp.getOccupancyFor()));
                        lblTempPrice.setText(String.valueOf(temp.getPricePerDay()));

                    }

                }
            }
        });
    }
private void initPurchaseListerners() {
        tblComplaintsPurchase.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = tblComplaintsPurchase.getSelectedRow();
                if (selectedRow >= 0) {
                    Purchase pur = (Purchase) tblComplaintsPurchase.getValueAt(selectedRow, 0);
                    if (null != pur) {
                        txtProductAddress.setText(pur.getAddress());
                        txtProductCategory.setText(pur.getCategory());
                        txtProductCondition.setText(pur.getContidion());
                        txtProductName.setText(pur.getProductName());
                        txtProductQuantity.setText(String.valueOf(pur.getQuantity()));
                        ImageIcon photo = new ImageIcon(pur.getProductImage());
                        Image fitImage = photo.getImage();
                        Image fitSize = fitImage.getScaledInstance(220, 170, Image.SCALE_SMOOTH);
                        lblProductImage.setIcon(new ImageIcon(fitSize));

                    }

                }
            }
        });
    }

    private void initPermListerners() {
        tblAdminComplaintPer.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = tblAdminComplaintPer.getSelectedRow();
                if (selectedRow >= 0) {
                    Permanent per = (Permanent) tblAdminComplaintPer.getValueAt(selectedRow, 0);
                    if (null != per) {
                        lblPermAddress.setText(per.getAddress().trim());
                        lblPermContact.setText(per.getContact().trim());
                        lblPermFacilities.setText(per.getFacilities().trim());
                        lblPermRent.setText(String.valueOf(per.getRent()));
                        lblPermTotalPpl.setText(String.valueOf(per.getTotalPeopleInHouse()));

                    }

                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PermanentAccomodationPanel;
    private javax.swing.JPanel RentalPanel;
    private javax.swing.JPanel TemporaryAccomodationPanel;
    private javax.swing.JTabbedPane adminComplaintManagementTab;
    private javax.swing.JButton btnAdminComplaintPermDelete;
    private javax.swing.JButton btnAdminComplaintTempDelete;
    private javax.swing.JButton btnBackComplaintManagementAdmin;
    private javax.swing.JButton btnDeletePurchase;
    private javax.swing.JButton btnRentDelete;
    private javax.swing.JPanel buyingComplaintsJPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblPermAddress;
    private javax.swing.JLabel lblPermContact;
    private javax.swing.JLabel lblPermFacilities;
    private javax.swing.JLabel lblPermRent;
    private javax.swing.JLabel lblPermTotalPpl;
    private javax.swing.JLabel lblProductImage;
    private javax.swing.JLabel lblTempAddress;
    private javax.swing.JLabel lblTempContact;
    private javax.swing.JLabel lblTempDistance;
    private javax.swing.JLabel lblTempFacilities;
    private javax.swing.JLabel lblTempOccupancy;
    private javax.swing.JLabel lblTempPrice;
    private javax.swing.JTable tblAdminComplaintPer;
    private javax.swing.JTable tblAdminComplaintTemp;
    private javax.swing.JTable tblComplaintsPurchase;
    private javax.swing.JTable tblRentComplaints;
    private javax.swing.JLabel txtProductAddress;
    private javax.swing.JLabel txtProductCategory;
    private javax.swing.JLabel txtProductCondition;
    private javax.swing.JLabel txtProductName;
    private javax.swing.JLabel txtProductQuantity;
    private javax.swing.JLabel txtRentAddress;
    private javax.swing.JLabel txtRentCategory;
    private javax.swing.JLabel txtRentCondition;
    private javax.swing.JLabel txtRentImage;
    private javax.swing.JLabel txtRentPeriod;
    private javax.swing.JLabel txtRentProductName;
    // End of variables declaration//GEN-END:variables
}
